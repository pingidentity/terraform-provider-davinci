/*
PingOne Platform API - PingOne MFA

The PingOne Platform API covering the PingOne MFA service

API version: 2021-10-17
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mfa

import (
	"encoding/json"
)

// MFASettingsAuthentication An object that contains the device selection settings.
type MFASettingsAuthentication struct {
	// Deprecated
	DeviceSelection EnumMFASettingsDeviceSelection `json:"deviceSelection"`
}

// NewMFASettingsAuthentication instantiates a new MFASettingsAuthentication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMFASettingsAuthentication(deviceSelection EnumMFASettingsDeviceSelection) *MFASettingsAuthentication {
	this := MFASettingsAuthentication{}
	this.DeviceSelection = deviceSelection
	return &this
}

// NewMFASettingsAuthenticationWithDefaults instantiates a new MFASettingsAuthentication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMFASettingsAuthenticationWithDefaults() *MFASettingsAuthentication {
	this := MFASettingsAuthentication{}
	return &this
}

// GetDeviceSelection returns the DeviceSelection field value
// Deprecated
func (o *MFASettingsAuthentication) GetDeviceSelection() EnumMFASettingsDeviceSelection {
	if o == nil {
		var ret EnumMFASettingsDeviceSelection
		return ret
	}

	return o.DeviceSelection
}

// GetDeviceSelectionOk returns a tuple with the DeviceSelection field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *MFASettingsAuthentication) GetDeviceSelectionOk() (*EnumMFASettingsDeviceSelection, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DeviceSelection, true
}

// SetDeviceSelection sets field value
// Deprecated
func (o *MFASettingsAuthentication) SetDeviceSelection(v EnumMFASettingsDeviceSelection) {
	o.DeviceSelection = v
}

func (o MFASettingsAuthentication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["deviceSelection"] = o.DeviceSelection
	}
	return json.Marshal(toSerialize)
}

type NullableMFASettingsAuthentication struct {
	value *MFASettingsAuthentication
	isSet bool
}

func (v NullableMFASettingsAuthentication) Get() *MFASettingsAuthentication {
	return v.value
}

func (v *NullableMFASettingsAuthentication) Set(val *MFASettingsAuthentication) {
	v.value = val
	v.isSet = true
}

func (v NullableMFASettingsAuthentication) IsSet() bool {
	return v.isSet
}

func (v *NullableMFASettingsAuthentication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMFASettingsAuthentication(val *MFASettingsAuthentication) *NullableMFASettingsAuthentication {
	return &NullableMFASettingsAuthentication{value: val, isSet: true}
}

func (v NullableMFASettingsAuthentication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMFASettingsAuthentication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


