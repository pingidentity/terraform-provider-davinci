/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// PasswordPolicyLength Settings to control the user's password length
type PasswordPolicyLength struct {
	// The maximum number of characters allowed for the password. Defaults to 255. This property is not enforced when not present.
	Max *int32 `json:"max,omitempty"`
	// The minimum number of characters required for the password. This can be from 8 to 32 (inclusive). Defaults to 8 characters. This property is not enforced when not present.
	Min *int32 `json:"min,omitempty"`
}

// NewPasswordPolicyLength instantiates a new PasswordPolicyLength object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPasswordPolicyLength() *PasswordPolicyLength {
	this := PasswordPolicyLength{}
	var max int32 = 255
	this.Max = &max
	var min int32 = 8
	this.Min = &min
	return &this
}

// NewPasswordPolicyLengthWithDefaults instantiates a new PasswordPolicyLength object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPasswordPolicyLengthWithDefaults() *PasswordPolicyLength {
	this := PasswordPolicyLength{}
	var max int32 = 255
	this.Max = &max
	var min int32 = 8
	this.Min = &min
	return &this
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *PasswordPolicyLength) GetMax() int32 {
	if o == nil || isNil(o.Max) {
		var ret int32
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PasswordPolicyLength) GetMaxOk() (*int32, bool) {
	if o == nil || isNil(o.Max) {
    return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *PasswordPolicyLength) HasMax() bool {
	if o != nil && !isNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given int32 and assigns it to the Max field.
func (o *PasswordPolicyLength) SetMax(v int32) {
	o.Max = &v
}

// GetMin returns the Min field value if set, zero value otherwise.
func (o *PasswordPolicyLength) GetMin() int32 {
	if o == nil || isNil(o.Min) {
		var ret int32
		return ret
	}
	return *o.Min
}

// GetMinOk returns a tuple with the Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PasswordPolicyLength) GetMinOk() (*int32, bool) {
	if o == nil || isNil(o.Min) {
    return nil, false
	}
	return o.Min, true
}

// HasMin returns a boolean if a field has been set.
func (o *PasswordPolicyLength) HasMin() bool {
	if o != nil && !isNil(o.Min) {
		return true
	}

	return false
}

// SetMin gets a reference to the given int32 and assigns it to the Min field.
func (o *PasswordPolicyLength) SetMin(v int32) {
	o.Min = &v
}

func (o PasswordPolicyLength) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !isNil(o.Min) {
		toSerialize["min"] = o.Min
	}
	return json.Marshal(toSerialize)
}

type NullablePasswordPolicyLength struct {
	value *PasswordPolicyLength
	isSet bool
}

func (v NullablePasswordPolicyLength) Get() *PasswordPolicyLength {
	return v.value
}

func (v *NullablePasswordPolicyLength) Set(val *PasswordPolicyLength) {
	v.value = val
	v.isSet = true
}

func (v NullablePasswordPolicyLength) IsSet() bool {
	return v.isSet
}

func (v *NullablePasswordPolicyLength) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePasswordPolicyLength(val *PasswordPolicyLength) *NullablePasswordPolicyLength {
	return &NullablePasswordPolicyLength{value: val, isSet: true}
}

func (v NullablePasswordPolicyLength) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePasswordPolicyLength) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


