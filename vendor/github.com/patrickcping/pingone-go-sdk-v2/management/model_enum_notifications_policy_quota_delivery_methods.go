/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"fmt"
)

// EnumNotificationsPolicyQuotaDeliveryMethods the model 'EnumNotificationsPolicyQuotaDeliveryMethods'
type EnumNotificationsPolicyQuotaDeliveryMethods string

// List of EnumNotificationsPolicyQuotaDeliveryMethods
const (
	ENUMNOTIFICATIONSPOLICYQUOTADELIVERYMETHODS_SMS EnumNotificationsPolicyQuotaDeliveryMethods = "SMS"
	ENUMNOTIFICATIONSPOLICYQUOTADELIVERYMETHODS_VOICE EnumNotificationsPolicyQuotaDeliveryMethods = "Voice"
)

// All allowed values of EnumNotificationsPolicyQuotaDeliveryMethods enum
var AllowedEnumNotificationsPolicyQuotaDeliveryMethodsEnumValues = []EnumNotificationsPolicyQuotaDeliveryMethods{
	"SMS",
	"Voice",
}

func (v *EnumNotificationsPolicyQuotaDeliveryMethods) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumNotificationsPolicyQuotaDeliveryMethods(value)
	for _, existing := range AllowedEnumNotificationsPolicyQuotaDeliveryMethodsEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumNotificationsPolicyQuotaDeliveryMethods", value)
}

// NewEnumNotificationsPolicyQuotaDeliveryMethodsFromValue returns a pointer to a valid EnumNotificationsPolicyQuotaDeliveryMethods
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumNotificationsPolicyQuotaDeliveryMethodsFromValue(v string) (*EnumNotificationsPolicyQuotaDeliveryMethods, error) {
	ev := EnumNotificationsPolicyQuotaDeliveryMethods(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumNotificationsPolicyQuotaDeliveryMethods: valid values are %v", v, AllowedEnumNotificationsPolicyQuotaDeliveryMethodsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumNotificationsPolicyQuotaDeliveryMethods) IsValid() bool {
	for _, existing := range AllowedEnumNotificationsPolicyQuotaDeliveryMethodsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumNotificationsPolicyQuotaDeliveryMethods value
func (v EnumNotificationsPolicyQuotaDeliveryMethods) Ptr() *EnumNotificationsPolicyQuotaDeliveryMethods {
	return &v
}

type NullableEnumNotificationsPolicyQuotaDeliveryMethods struct {
	value *EnumNotificationsPolicyQuotaDeliveryMethods
	isSet bool
}

func (v NullableEnumNotificationsPolicyQuotaDeliveryMethods) Get() *EnumNotificationsPolicyQuotaDeliveryMethods {
	return v.value
}

func (v *NullableEnumNotificationsPolicyQuotaDeliveryMethods) Set(val *EnumNotificationsPolicyQuotaDeliveryMethods) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumNotificationsPolicyQuotaDeliveryMethods) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumNotificationsPolicyQuotaDeliveryMethods) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumNotificationsPolicyQuotaDeliveryMethods(val *EnumNotificationsPolicyQuotaDeliveryMethods) *NullableEnumNotificationsPolicyQuotaDeliveryMethods {
	return &NullableEnumNotificationsPolicyQuotaDeliveryMethods{value: val, isSet: true}
}

func (v NullableEnumNotificationsPolicyQuotaDeliveryMethods) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumNotificationsPolicyQuotaDeliveryMethods) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

