/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// AlertChannel struct for AlertChannel
type AlertChannel struct {
	// Unique ID of the alert channel.
	Id *string `json:"id,omitempty"`
	Environment *ObjectEnvironment `json:"environment,omitempty"`
	ChannelType EnumAlertChannelType `json:"channelType"`
	// The email addresses to send the alert to.
	Addresses []string `json:"addresses"`
	// Filters alerts by severity. If empty, all severities are included. Possible values are `INFO`, `WARNING`, and `ERROR``.
	IncludeSeverities []EnumAlertChannelSeverity `json:"includeSeverities,omitempty"`
	// Filters alerts by alert type. If empty, all alert types are included. Possible values are CERTIFICATE_EXPIRED, CERTIFICATE_EXPIRING, KEY_PAIR_EXPIRED, GATEWAY_VERSION_DEPRECATED, KEY_PAIR_EXPIRING, and GATEWAY_VERSION_DEPRECATING.
	IncludeAlertTypes []EnumAlertChannelAlertType `json:"includeAlertTypes,omitempty"`
	// Administrators will not be emailed alerts of these types. If empty, no alert types are excluded. Possible values are CERTIFICATE_EXPIRED, CERTIFICATE_EXPIRING, KEY_PAIR_EXPIRED, GATEWAY_VERSION_DEPRECATED, KEY_PAIR_EXPIRING, and GATEWAY_VERSION_DEPRECATING.
	ExcludeAlertTypes []EnumAlertChannelAlertType `json:"excludeAlertTypes,omitempty"`
}

// NewAlertChannel instantiates a new AlertChannel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertChannel(channelType EnumAlertChannelType, addresses []string) *AlertChannel {
	this := AlertChannel{}
	this.ChannelType = channelType
	this.Addresses = addresses
	return &this
}

// NewAlertChannelWithDefaults instantiates a new AlertChannel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertChannelWithDefaults() *AlertChannel {
	this := AlertChannel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AlertChannel) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertChannel) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AlertChannel) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AlertChannel) SetId(v string) {
	o.Id = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *AlertChannel) GetEnvironment() ObjectEnvironment {
	if o == nil || isNil(o.Environment) {
		var ret ObjectEnvironment
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertChannel) GetEnvironmentOk() (*ObjectEnvironment, bool) {
	if o == nil || isNil(o.Environment) {
    return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *AlertChannel) HasEnvironment() bool {
	if o != nil && !isNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given ObjectEnvironment and assigns it to the Environment field.
func (o *AlertChannel) SetEnvironment(v ObjectEnvironment) {
	o.Environment = &v
}

// GetChannelType returns the ChannelType field value
func (o *AlertChannel) GetChannelType() EnumAlertChannelType {
	if o == nil {
		var ret EnumAlertChannelType
		return ret
	}

	return o.ChannelType
}

// GetChannelTypeOk returns a tuple with the ChannelType field value
// and a boolean to check if the value has been set.
func (o *AlertChannel) GetChannelTypeOk() (*EnumAlertChannelType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ChannelType, true
}

// SetChannelType sets field value
func (o *AlertChannel) SetChannelType(v EnumAlertChannelType) {
	o.ChannelType = v
}

// GetAddresses returns the Addresses field value
func (o *AlertChannel) GetAddresses() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value
// and a boolean to check if the value has been set.
func (o *AlertChannel) GetAddressesOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Addresses, true
}

// SetAddresses sets field value
func (o *AlertChannel) SetAddresses(v []string) {
	o.Addresses = v
}

// GetIncludeSeverities returns the IncludeSeverities field value if set, zero value otherwise.
func (o *AlertChannel) GetIncludeSeverities() []EnumAlertChannelSeverity {
	if o == nil || isNil(o.IncludeSeverities) {
		var ret []EnumAlertChannelSeverity
		return ret
	}
	return o.IncludeSeverities
}

// GetIncludeSeveritiesOk returns a tuple with the IncludeSeverities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertChannel) GetIncludeSeveritiesOk() ([]EnumAlertChannelSeverity, bool) {
	if o == nil || isNil(o.IncludeSeverities) {
    return nil, false
	}
	return o.IncludeSeverities, true
}

// HasIncludeSeverities returns a boolean if a field has been set.
func (o *AlertChannel) HasIncludeSeverities() bool {
	if o != nil && !isNil(o.IncludeSeverities) {
		return true
	}

	return false
}

// SetIncludeSeverities gets a reference to the given []EnumAlertChannelSeverity and assigns it to the IncludeSeverities field.
func (o *AlertChannel) SetIncludeSeverities(v []EnumAlertChannelSeverity) {
	o.IncludeSeverities = v
}

// GetIncludeAlertTypes returns the IncludeAlertTypes field value if set, zero value otherwise.
func (o *AlertChannel) GetIncludeAlertTypes() []EnumAlertChannelAlertType {
	if o == nil || isNil(o.IncludeAlertTypes) {
		var ret []EnumAlertChannelAlertType
		return ret
	}
	return o.IncludeAlertTypes
}

// GetIncludeAlertTypesOk returns a tuple with the IncludeAlertTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertChannel) GetIncludeAlertTypesOk() ([]EnumAlertChannelAlertType, bool) {
	if o == nil || isNil(o.IncludeAlertTypes) {
    return nil, false
	}
	return o.IncludeAlertTypes, true
}

// HasIncludeAlertTypes returns a boolean if a field has been set.
func (o *AlertChannel) HasIncludeAlertTypes() bool {
	if o != nil && !isNil(o.IncludeAlertTypes) {
		return true
	}

	return false
}

// SetIncludeAlertTypes gets a reference to the given []EnumAlertChannelAlertType and assigns it to the IncludeAlertTypes field.
func (o *AlertChannel) SetIncludeAlertTypes(v []EnumAlertChannelAlertType) {
	o.IncludeAlertTypes = v
}

// GetExcludeAlertTypes returns the ExcludeAlertTypes field value if set, zero value otherwise.
func (o *AlertChannel) GetExcludeAlertTypes() []EnumAlertChannelAlertType {
	if o == nil || isNil(o.ExcludeAlertTypes) {
		var ret []EnumAlertChannelAlertType
		return ret
	}
	return o.ExcludeAlertTypes
}

// GetExcludeAlertTypesOk returns a tuple with the ExcludeAlertTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertChannel) GetExcludeAlertTypesOk() ([]EnumAlertChannelAlertType, bool) {
	if o == nil || isNil(o.ExcludeAlertTypes) {
    return nil, false
	}
	return o.ExcludeAlertTypes, true
}

// HasExcludeAlertTypes returns a boolean if a field has been set.
func (o *AlertChannel) HasExcludeAlertTypes() bool {
	if o != nil && !isNil(o.ExcludeAlertTypes) {
		return true
	}

	return false
}

// SetExcludeAlertTypes gets a reference to the given []EnumAlertChannelAlertType and assigns it to the ExcludeAlertTypes field.
func (o *AlertChannel) SetExcludeAlertTypes(v []EnumAlertChannelAlertType) {
	o.ExcludeAlertTypes = v
}

func (o AlertChannel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if true {
		toSerialize["channelType"] = o.ChannelType
	}
	if true {
		toSerialize["addresses"] = o.Addresses
	}
	if !isNil(o.IncludeSeverities) {
		toSerialize["includeSeverities"] = o.IncludeSeverities
	}
	if !isNil(o.IncludeAlertTypes) {
		toSerialize["includeAlertTypes"] = o.IncludeAlertTypes
	}
	if !isNil(o.ExcludeAlertTypes) {
		toSerialize["excludeAlertTypes"] = o.ExcludeAlertTypes
	}
	return json.Marshal(toSerialize)
}

type NullableAlertChannel struct {
	value *AlertChannel
	isSet bool
}

func (v NullableAlertChannel) Get() *AlertChannel {
	return v.value
}

func (v *NullableAlertChannel) Set(val *AlertChannel) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertChannel) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertChannel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertChannel(val *AlertChannel) *NullableAlertChannel {
	return &NullableAlertChannel{value: val, isSet: true}
}

func (v NullableAlertChannel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertChannel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


