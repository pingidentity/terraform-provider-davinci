/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// LicenseMfa struct for LicenseMfa
type LicenseMfa struct {
	// A read-only boolean that specifies whether push notifications are allowed. For TRIAL (unpaid) licenses, the default value is true. For other license package types, adoption of the feature determines the default value.
	AllowPushNotification *bool `json:"allowPushNotification,omitempty"`
	// A read-only boolean that specifies whether the license supports sending notifications outside of the environment's whitelist.
	AllowNotificationOutsideWhitelist *bool `json:"allowNotificationOutsideWhitelist,omitempty"`
	// A read-only boolean that specifies whether FIDO2 devices are allowed. For TRIAL (unpaid) licenses, the default value is true. For other license package types, adoption of the feature determines the default value.
	AllowFido2Devices *bool `json:"allowFido2Devices,omitempty"`
	AllowVoiceOtp *bool `json:"allowVoiceOtp,omitempty"`
	AllowEmailOtp *bool `json:"allowEmailOtp,omitempty"`
	AllowSmsOtp *bool `json:"allowSmsOtp,omitempty"`
	AllowTotp *bool `json:"allowTotp,omitempty"`
}

// NewLicenseMfa instantiates a new LicenseMfa object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLicenseMfa() *LicenseMfa {
	this := LicenseMfa{}
	return &this
}

// NewLicenseMfaWithDefaults instantiates a new LicenseMfa object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLicenseMfaWithDefaults() *LicenseMfa {
	this := LicenseMfa{}
	return &this
}

// GetAllowPushNotification returns the AllowPushNotification field value if set, zero value otherwise.
func (o *LicenseMfa) GetAllowPushNotification() bool {
	if o == nil || isNil(o.AllowPushNotification) {
		var ret bool
		return ret
	}
	return *o.AllowPushNotification
}

// GetAllowPushNotificationOk returns a tuple with the AllowPushNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseMfa) GetAllowPushNotificationOk() (*bool, bool) {
	if o == nil || isNil(o.AllowPushNotification) {
    return nil, false
	}
	return o.AllowPushNotification, true
}

// HasAllowPushNotification returns a boolean if a field has been set.
func (o *LicenseMfa) HasAllowPushNotification() bool {
	if o != nil && !isNil(o.AllowPushNotification) {
		return true
	}

	return false
}

// SetAllowPushNotification gets a reference to the given bool and assigns it to the AllowPushNotification field.
func (o *LicenseMfa) SetAllowPushNotification(v bool) {
	o.AllowPushNotification = &v
}

// GetAllowNotificationOutsideWhitelist returns the AllowNotificationOutsideWhitelist field value if set, zero value otherwise.
func (o *LicenseMfa) GetAllowNotificationOutsideWhitelist() bool {
	if o == nil || isNil(o.AllowNotificationOutsideWhitelist) {
		var ret bool
		return ret
	}
	return *o.AllowNotificationOutsideWhitelist
}

// GetAllowNotificationOutsideWhitelistOk returns a tuple with the AllowNotificationOutsideWhitelist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseMfa) GetAllowNotificationOutsideWhitelistOk() (*bool, bool) {
	if o == nil || isNil(o.AllowNotificationOutsideWhitelist) {
    return nil, false
	}
	return o.AllowNotificationOutsideWhitelist, true
}

// HasAllowNotificationOutsideWhitelist returns a boolean if a field has been set.
func (o *LicenseMfa) HasAllowNotificationOutsideWhitelist() bool {
	if o != nil && !isNil(o.AllowNotificationOutsideWhitelist) {
		return true
	}

	return false
}

// SetAllowNotificationOutsideWhitelist gets a reference to the given bool and assigns it to the AllowNotificationOutsideWhitelist field.
func (o *LicenseMfa) SetAllowNotificationOutsideWhitelist(v bool) {
	o.AllowNotificationOutsideWhitelist = &v
}

// GetAllowFido2Devices returns the AllowFido2Devices field value if set, zero value otherwise.
func (o *LicenseMfa) GetAllowFido2Devices() bool {
	if o == nil || isNil(o.AllowFido2Devices) {
		var ret bool
		return ret
	}
	return *o.AllowFido2Devices
}

// GetAllowFido2DevicesOk returns a tuple with the AllowFido2Devices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseMfa) GetAllowFido2DevicesOk() (*bool, bool) {
	if o == nil || isNil(o.AllowFido2Devices) {
    return nil, false
	}
	return o.AllowFido2Devices, true
}

// HasAllowFido2Devices returns a boolean if a field has been set.
func (o *LicenseMfa) HasAllowFido2Devices() bool {
	if o != nil && !isNil(o.AllowFido2Devices) {
		return true
	}

	return false
}

// SetAllowFido2Devices gets a reference to the given bool and assigns it to the AllowFido2Devices field.
func (o *LicenseMfa) SetAllowFido2Devices(v bool) {
	o.AllowFido2Devices = &v
}

// GetAllowVoiceOtp returns the AllowVoiceOtp field value if set, zero value otherwise.
func (o *LicenseMfa) GetAllowVoiceOtp() bool {
	if o == nil || isNil(o.AllowVoiceOtp) {
		var ret bool
		return ret
	}
	return *o.AllowVoiceOtp
}

// GetAllowVoiceOtpOk returns a tuple with the AllowVoiceOtp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseMfa) GetAllowVoiceOtpOk() (*bool, bool) {
	if o == nil || isNil(o.AllowVoiceOtp) {
    return nil, false
	}
	return o.AllowVoiceOtp, true
}

// HasAllowVoiceOtp returns a boolean if a field has been set.
func (o *LicenseMfa) HasAllowVoiceOtp() bool {
	if o != nil && !isNil(o.AllowVoiceOtp) {
		return true
	}

	return false
}

// SetAllowVoiceOtp gets a reference to the given bool and assigns it to the AllowVoiceOtp field.
func (o *LicenseMfa) SetAllowVoiceOtp(v bool) {
	o.AllowVoiceOtp = &v
}

// GetAllowEmailOtp returns the AllowEmailOtp field value if set, zero value otherwise.
func (o *LicenseMfa) GetAllowEmailOtp() bool {
	if o == nil || isNil(o.AllowEmailOtp) {
		var ret bool
		return ret
	}
	return *o.AllowEmailOtp
}

// GetAllowEmailOtpOk returns a tuple with the AllowEmailOtp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseMfa) GetAllowEmailOtpOk() (*bool, bool) {
	if o == nil || isNil(o.AllowEmailOtp) {
    return nil, false
	}
	return o.AllowEmailOtp, true
}

// HasAllowEmailOtp returns a boolean if a field has been set.
func (o *LicenseMfa) HasAllowEmailOtp() bool {
	if o != nil && !isNil(o.AllowEmailOtp) {
		return true
	}

	return false
}

// SetAllowEmailOtp gets a reference to the given bool and assigns it to the AllowEmailOtp field.
func (o *LicenseMfa) SetAllowEmailOtp(v bool) {
	o.AllowEmailOtp = &v
}

// GetAllowSmsOtp returns the AllowSmsOtp field value if set, zero value otherwise.
func (o *LicenseMfa) GetAllowSmsOtp() bool {
	if o == nil || isNil(o.AllowSmsOtp) {
		var ret bool
		return ret
	}
	return *o.AllowSmsOtp
}

// GetAllowSmsOtpOk returns a tuple with the AllowSmsOtp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseMfa) GetAllowSmsOtpOk() (*bool, bool) {
	if o == nil || isNil(o.AllowSmsOtp) {
    return nil, false
	}
	return o.AllowSmsOtp, true
}

// HasAllowSmsOtp returns a boolean if a field has been set.
func (o *LicenseMfa) HasAllowSmsOtp() bool {
	if o != nil && !isNil(o.AllowSmsOtp) {
		return true
	}

	return false
}

// SetAllowSmsOtp gets a reference to the given bool and assigns it to the AllowSmsOtp field.
func (o *LicenseMfa) SetAllowSmsOtp(v bool) {
	o.AllowSmsOtp = &v
}

// GetAllowTotp returns the AllowTotp field value if set, zero value otherwise.
func (o *LicenseMfa) GetAllowTotp() bool {
	if o == nil || isNil(o.AllowTotp) {
		var ret bool
		return ret
	}
	return *o.AllowTotp
}

// GetAllowTotpOk returns a tuple with the AllowTotp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseMfa) GetAllowTotpOk() (*bool, bool) {
	if o == nil || isNil(o.AllowTotp) {
    return nil, false
	}
	return o.AllowTotp, true
}

// HasAllowTotp returns a boolean if a field has been set.
func (o *LicenseMfa) HasAllowTotp() bool {
	if o != nil && !isNil(o.AllowTotp) {
		return true
	}

	return false
}

// SetAllowTotp gets a reference to the given bool and assigns it to the AllowTotp field.
func (o *LicenseMfa) SetAllowTotp(v bool) {
	o.AllowTotp = &v
}

func (o LicenseMfa) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AllowPushNotification) {
		toSerialize["allowPushNotification"] = o.AllowPushNotification
	}
	if !isNil(o.AllowNotificationOutsideWhitelist) {
		toSerialize["allowNotificationOutsideWhitelist"] = o.AllowNotificationOutsideWhitelist
	}
	if !isNil(o.AllowFido2Devices) {
		toSerialize["allowFido2Devices"] = o.AllowFido2Devices
	}
	if !isNil(o.AllowVoiceOtp) {
		toSerialize["allowVoiceOtp"] = o.AllowVoiceOtp
	}
	if !isNil(o.AllowEmailOtp) {
		toSerialize["allowEmailOtp"] = o.AllowEmailOtp
	}
	if !isNil(o.AllowSmsOtp) {
		toSerialize["allowSmsOtp"] = o.AllowSmsOtp
	}
	if !isNil(o.AllowTotp) {
		toSerialize["allowTotp"] = o.AllowTotp
	}
	return json.Marshal(toSerialize)
}

type NullableLicenseMfa struct {
	value *LicenseMfa
	isSet bool
}

func (v NullableLicenseMfa) Get() *LicenseMfa {
	return v.value
}

func (v *NullableLicenseMfa) Set(val *LicenseMfa) {
	v.value = val
	v.isSet = true
}

func (v NullableLicenseMfa) IsSet() bool {
	return v.isSet
}

func (v *NullableLicenseMfa) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLicenseMfa(val *LicenseMfa) *NullableLicenseMfa {
	return &NullableLicenseMfa{value: val, isSet: true}
}

func (v NullableLicenseMfa) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLicenseMfa) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


