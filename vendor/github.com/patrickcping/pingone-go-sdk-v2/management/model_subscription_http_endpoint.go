/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// SubscriptionHttpEndpoint struct for SubscriptionHttpEndpoint
type SubscriptionHttpEndpoint struct {
	// A string that specifies a valid HTTPS URL to which event messages are sent. This is a required property.
	Url string `json:"url"`
	// An object map that specifies the headers applied to the outbound request (for example, `Authorization` `Basic usernamepassword`. The purpose of these headers is for the HTTPS endpoint to authenticate the PingOne service, ensuring that the information from PingOne is from a trusted source.
	Headers map[string]interface{} `json:"headers,omitempty"`
}

// NewSubscriptionHttpEndpoint instantiates a new SubscriptionHttpEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionHttpEndpoint(url string) *SubscriptionHttpEndpoint {
	this := SubscriptionHttpEndpoint{}
	this.Url = url
	return &this
}

// NewSubscriptionHttpEndpointWithDefaults instantiates a new SubscriptionHttpEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionHttpEndpointWithDefaults() *SubscriptionHttpEndpoint {
	this := SubscriptionHttpEndpoint{}
	return &this
}

// GetUrl returns the Url field value
func (o *SubscriptionHttpEndpoint) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *SubscriptionHttpEndpoint) GetUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *SubscriptionHttpEndpoint) SetUrl(v string) {
	o.Url = v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *SubscriptionHttpEndpoint) GetHeaders() map[string]interface{} {
	if o == nil || isNil(o.Headers) {
		var ret map[string]interface{}
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionHttpEndpoint) GetHeadersOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Headers) {
    return map[string]interface{}{}, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *SubscriptionHttpEndpoint) HasHeaders() bool {
	if o != nil && !isNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]interface{} and assigns it to the Headers field.
func (o *SubscriptionHttpEndpoint) SetHeaders(v map[string]interface{}) {
	o.Headers = v
}

func (o SubscriptionHttpEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if !isNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	return json.Marshal(toSerialize)
}

type NullableSubscriptionHttpEndpoint struct {
	value *SubscriptionHttpEndpoint
	isSet bool
}

func (v NullableSubscriptionHttpEndpoint) Get() *SubscriptionHttpEndpoint {
	return v.value
}

func (v *NullableSubscriptionHttpEndpoint) Set(val *SubscriptionHttpEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionHttpEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionHttpEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionHttpEndpoint(val *SubscriptionHttpEndpoint) *NullableSubscriptionHttpEndpoint {
	return &NullableSubscriptionHttpEndpoint{value: val, isSet: true}
}

func (v NullableSubscriptionHttpEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionHttpEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


