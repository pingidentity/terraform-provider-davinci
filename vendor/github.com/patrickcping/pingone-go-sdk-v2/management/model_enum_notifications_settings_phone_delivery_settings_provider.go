/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"fmt"
)

// EnumNotificationsSettingsPhoneDeliverySettingsProvider The ID of the provider of phone delivery service. Possible values: `PINGONE_TWILIO`: Specifies that Ping Identity's Twilio account is the SMS/voice provider. `CUSTOM_TWILIO`: Specifies that your Twilio account is the SMS/voice provider. `CUSTOM_SYNIVERSE`: Specifies that your Syniverse account is the SMS/voice provider. `CUSTOM_PROVIDER`: Specifies a custom-defined SMS provider (excluding Twilio and Syniverse). 
type EnumNotificationsSettingsPhoneDeliverySettingsProvider string

// List of EnumNotificationsSettingsPhoneDeliverySettingsProvider
const (
	ENUMNOTIFICATIONSSETTINGSPHONEDELIVERYSETTINGSPROVIDER_PINGONE_TWILIO EnumNotificationsSettingsPhoneDeliverySettingsProvider = "PINGONE_TWILIO"
	ENUMNOTIFICATIONSSETTINGSPHONEDELIVERYSETTINGSPROVIDER_CUSTOM_TWILIO EnumNotificationsSettingsPhoneDeliverySettingsProvider = "CUSTOM_TWILIO"
	ENUMNOTIFICATIONSSETTINGSPHONEDELIVERYSETTINGSPROVIDER_CUSTOM_SYNIVERSE EnumNotificationsSettingsPhoneDeliverySettingsProvider = "CUSTOM_SYNIVERSE"
	ENUMNOTIFICATIONSSETTINGSPHONEDELIVERYSETTINGSPROVIDER_CUSTOM_PROVIDER EnumNotificationsSettingsPhoneDeliverySettingsProvider = "CUSTOM_PROVIDER"
)

// All allowed values of EnumNotificationsSettingsPhoneDeliverySettingsProvider enum
var AllowedEnumNotificationsSettingsPhoneDeliverySettingsProviderEnumValues = []EnumNotificationsSettingsPhoneDeliverySettingsProvider{
	"PINGONE_TWILIO",
	"CUSTOM_TWILIO",
	"CUSTOM_SYNIVERSE",
	"CUSTOM_PROVIDER",
}

func (v *EnumNotificationsSettingsPhoneDeliverySettingsProvider) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumNotificationsSettingsPhoneDeliverySettingsProvider(value)
	for _, existing := range AllowedEnumNotificationsSettingsPhoneDeliverySettingsProviderEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumNotificationsSettingsPhoneDeliverySettingsProvider", value)
}

// NewEnumNotificationsSettingsPhoneDeliverySettingsProviderFromValue returns a pointer to a valid EnumNotificationsSettingsPhoneDeliverySettingsProvider
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumNotificationsSettingsPhoneDeliverySettingsProviderFromValue(v string) (*EnumNotificationsSettingsPhoneDeliverySettingsProvider, error) {
	ev := EnumNotificationsSettingsPhoneDeliverySettingsProvider(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumNotificationsSettingsPhoneDeliverySettingsProvider: valid values are %v", v, AllowedEnumNotificationsSettingsPhoneDeliverySettingsProviderEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumNotificationsSettingsPhoneDeliverySettingsProvider) IsValid() bool {
	for _, existing := range AllowedEnumNotificationsSettingsPhoneDeliverySettingsProviderEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumNotificationsSettingsPhoneDeliverySettingsProvider value
func (v EnumNotificationsSettingsPhoneDeliverySettingsProvider) Ptr() *EnumNotificationsSettingsPhoneDeliverySettingsProvider {
	return &v
}

type NullableEnumNotificationsSettingsPhoneDeliverySettingsProvider struct {
	value *EnumNotificationsSettingsPhoneDeliverySettingsProvider
	isSet bool
}

func (v NullableEnumNotificationsSettingsPhoneDeliverySettingsProvider) Get() *EnumNotificationsSettingsPhoneDeliverySettingsProvider {
	return v.value
}

func (v *NullableEnumNotificationsSettingsPhoneDeliverySettingsProvider) Set(val *EnumNotificationsSettingsPhoneDeliverySettingsProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumNotificationsSettingsPhoneDeliverySettingsProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumNotificationsSettingsPhoneDeliverySettingsProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumNotificationsSettingsPhoneDeliverySettingsProvider(val *EnumNotificationsSettingsPhoneDeliverySettingsProvider) *NullableEnumNotificationsSettingsPhoneDeliverySettingsProvider {
	return &NullableEnumNotificationsSettingsPhoneDeliverySettingsProvider{value: val, isSet: true}
}

func (v NullableEnumNotificationsSettingsPhoneDeliverySettingsProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumNotificationsSettingsPhoneDeliverySettingsProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

