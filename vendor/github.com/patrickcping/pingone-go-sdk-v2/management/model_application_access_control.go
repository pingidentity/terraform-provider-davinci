/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// ApplicationAccessControl struct for ApplicationAccessControl
type ApplicationAccessControl struct {
	Role *ApplicationAccessControlRole `json:"role,omitempty"`
	Group *ApplicationAccessControlGroup `json:"group,omitempty"`
}

// NewApplicationAccessControl instantiates a new ApplicationAccessControl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationAccessControl() *ApplicationAccessControl {
	this := ApplicationAccessControl{}
	return &this
}

// NewApplicationAccessControlWithDefaults instantiates a new ApplicationAccessControl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationAccessControlWithDefaults() *ApplicationAccessControl {
	this := ApplicationAccessControl{}
	return &this
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *ApplicationAccessControl) GetRole() ApplicationAccessControlRole {
	if o == nil || isNil(o.Role) {
		var ret ApplicationAccessControlRole
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAccessControl) GetRoleOk() (*ApplicationAccessControlRole, bool) {
	if o == nil || isNil(o.Role) {
    return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *ApplicationAccessControl) HasRole() bool {
	if o != nil && !isNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given ApplicationAccessControlRole and assigns it to the Role field.
func (o *ApplicationAccessControl) SetRole(v ApplicationAccessControlRole) {
	o.Role = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *ApplicationAccessControl) GetGroup() ApplicationAccessControlGroup {
	if o == nil || isNil(o.Group) {
		var ret ApplicationAccessControlGroup
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAccessControl) GetGroupOk() (*ApplicationAccessControlGroup, bool) {
	if o == nil || isNil(o.Group) {
    return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *ApplicationAccessControl) HasGroup() bool {
	if o != nil && !isNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given ApplicationAccessControlGroup and assigns it to the Group field.
func (o *ApplicationAccessControl) SetGroup(v ApplicationAccessControlGroup) {
	o.Group = &v
}

func (o ApplicationAccessControl) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !isNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationAccessControl struct {
	value *ApplicationAccessControl
	isSet bool
}

func (v NullableApplicationAccessControl) Get() *ApplicationAccessControl {
	return v.value
}

func (v *NullableApplicationAccessControl) Set(val *ApplicationAccessControl) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationAccessControl) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationAccessControl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationAccessControl(val *ApplicationAccessControl) *NullableApplicationAccessControl {
	return &NullableApplicationAccessControl{value: val, isSet: true}
}

func (v NullableApplicationAccessControl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationAccessControl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


