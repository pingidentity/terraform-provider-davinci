/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// CustomDomainCertificateRequest struct for CustomDomainCertificateRequest
type CustomDomainCertificateRequest struct {
	// A string that specifies the PEM-encoded certificate to import. This is a required property. The following validation is performed on the certificate: \\ It must not be expired. \\ It MUST not be self signed. \\ The custom domain name MUST match one of the subject alternative name (SAN) values on the certificate. 
	Certificate string `json:"certificate"`
	// A string that specifies the PEM-encoded certificate chain.
	IntermediateCertificates *string `json:"intermediateCertificates,omitempty"`
	// A string that specifies the PEM-encoded, unencrypted private key that matches the certificate's public key. This is a required property.
	PrivateKey string `json:"privateKey"`
}

// NewCustomDomainCertificateRequest instantiates a new CustomDomainCertificateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomDomainCertificateRequest(certificate string, privateKey string) *CustomDomainCertificateRequest {
	this := CustomDomainCertificateRequest{}
	this.Certificate = certificate
	this.PrivateKey = privateKey
	return &this
}

// NewCustomDomainCertificateRequestWithDefaults instantiates a new CustomDomainCertificateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomDomainCertificateRequestWithDefaults() *CustomDomainCertificateRequest {
	this := CustomDomainCertificateRequest{}
	return &this
}

// GetCertificate returns the Certificate field value
func (o *CustomDomainCertificateRequest) GetCertificate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value
// and a boolean to check if the value has been set.
func (o *CustomDomainCertificateRequest) GetCertificateOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Certificate, true
}

// SetCertificate sets field value
func (o *CustomDomainCertificateRequest) SetCertificate(v string) {
	o.Certificate = v
}

// GetIntermediateCertificates returns the IntermediateCertificates field value if set, zero value otherwise.
func (o *CustomDomainCertificateRequest) GetIntermediateCertificates() string {
	if o == nil || isNil(o.IntermediateCertificates) {
		var ret string
		return ret
	}
	return *o.IntermediateCertificates
}

// GetIntermediateCertificatesOk returns a tuple with the IntermediateCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDomainCertificateRequest) GetIntermediateCertificatesOk() (*string, bool) {
	if o == nil || isNil(o.IntermediateCertificates) {
    return nil, false
	}
	return o.IntermediateCertificates, true
}

// HasIntermediateCertificates returns a boolean if a field has been set.
func (o *CustomDomainCertificateRequest) HasIntermediateCertificates() bool {
	if o != nil && !isNil(o.IntermediateCertificates) {
		return true
	}

	return false
}

// SetIntermediateCertificates gets a reference to the given string and assigns it to the IntermediateCertificates field.
func (o *CustomDomainCertificateRequest) SetIntermediateCertificates(v string) {
	o.IntermediateCertificates = &v
}

// GetPrivateKey returns the PrivateKey field value
func (o *CustomDomainCertificateRequest) GetPrivateKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value
// and a boolean to check if the value has been set.
func (o *CustomDomainCertificateRequest) GetPrivateKeyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PrivateKey, true
}

// SetPrivateKey sets field value
func (o *CustomDomainCertificateRequest) SetPrivateKey(v string) {
	o.PrivateKey = v
}

func (o CustomDomainCertificateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["certificate"] = o.Certificate
	}
	if !isNil(o.IntermediateCertificates) {
		toSerialize["intermediateCertificates"] = o.IntermediateCertificates
	}
	if true {
		toSerialize["privateKey"] = o.PrivateKey
	}
	return json.Marshal(toSerialize)
}

type NullableCustomDomainCertificateRequest struct {
	value *CustomDomainCertificateRequest
	isSet bool
}

func (v NullableCustomDomainCertificateRequest) Get() *CustomDomainCertificateRequest {
	return v.value
}

func (v *NullableCustomDomainCertificateRequest) Set(val *CustomDomainCertificateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomDomainCertificateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomDomainCertificateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomDomainCertificateRequest(val *CustomDomainCertificateRequest) *NullableCustomDomainCertificateRequest {
	return &NullableCustomDomainCertificateRequest{value: val, isSet: true}
}

func (v NullableCustomDomainCertificateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomDomainCertificateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


