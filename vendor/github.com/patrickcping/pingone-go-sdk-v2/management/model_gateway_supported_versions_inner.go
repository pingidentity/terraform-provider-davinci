/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"time"
)

// GatewaySupportedVersionsInner struct for GatewaySupportedVersionsInner
type GatewaySupportedVersionsInner struct {
	// A string that specifies the gateway version number.
	Version *string `json:"version,omitempty"`
	// A string that identifies the gateway image path.
	Image *string `json:"image,omitempty"`
	// A boolean that specifies whether this is the recommended LDAP gateway version.
	Recommended *bool `json:"recommended,omitempty"`
	// A boolean that specifies whether this is the latest LDAP gateway version.
	Latest *bool `json:"latest,omitempty"`
	SupportEndsOn *time.Time `json:"supportEndsOn,omitempty"`
	DaysUntilSupportEnds *int32 `json:"daysUntilSupportEnds,omitempty"`
}

// NewGatewaySupportedVersionsInner instantiates a new GatewaySupportedVersionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewaySupportedVersionsInner() *GatewaySupportedVersionsInner {
	this := GatewaySupportedVersionsInner{}
	return &this
}

// NewGatewaySupportedVersionsInnerWithDefaults instantiates a new GatewaySupportedVersionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewaySupportedVersionsInnerWithDefaults() *GatewaySupportedVersionsInner {
	this := GatewaySupportedVersionsInner{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *GatewaySupportedVersionsInner) GetVersion() string {
	if o == nil || isNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewaySupportedVersionsInner) GetVersionOk() (*string, bool) {
	if o == nil || isNil(o.Version) {
    return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *GatewaySupportedVersionsInner) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *GatewaySupportedVersionsInner) SetVersion(v string) {
	o.Version = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *GatewaySupportedVersionsInner) GetImage() string {
	if o == nil || isNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewaySupportedVersionsInner) GetImageOk() (*string, bool) {
	if o == nil || isNil(o.Image) {
    return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *GatewaySupportedVersionsInner) HasImage() bool {
	if o != nil && !isNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *GatewaySupportedVersionsInner) SetImage(v string) {
	o.Image = &v
}

// GetRecommended returns the Recommended field value if set, zero value otherwise.
func (o *GatewaySupportedVersionsInner) GetRecommended() bool {
	if o == nil || isNil(o.Recommended) {
		var ret bool
		return ret
	}
	return *o.Recommended
}

// GetRecommendedOk returns a tuple with the Recommended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewaySupportedVersionsInner) GetRecommendedOk() (*bool, bool) {
	if o == nil || isNil(o.Recommended) {
    return nil, false
	}
	return o.Recommended, true
}

// HasRecommended returns a boolean if a field has been set.
func (o *GatewaySupportedVersionsInner) HasRecommended() bool {
	if o != nil && !isNil(o.Recommended) {
		return true
	}

	return false
}

// SetRecommended gets a reference to the given bool and assigns it to the Recommended field.
func (o *GatewaySupportedVersionsInner) SetRecommended(v bool) {
	o.Recommended = &v
}

// GetLatest returns the Latest field value if set, zero value otherwise.
func (o *GatewaySupportedVersionsInner) GetLatest() bool {
	if o == nil || isNil(o.Latest) {
		var ret bool
		return ret
	}
	return *o.Latest
}

// GetLatestOk returns a tuple with the Latest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewaySupportedVersionsInner) GetLatestOk() (*bool, bool) {
	if o == nil || isNil(o.Latest) {
    return nil, false
	}
	return o.Latest, true
}

// HasLatest returns a boolean if a field has been set.
func (o *GatewaySupportedVersionsInner) HasLatest() bool {
	if o != nil && !isNil(o.Latest) {
		return true
	}

	return false
}

// SetLatest gets a reference to the given bool and assigns it to the Latest field.
func (o *GatewaySupportedVersionsInner) SetLatest(v bool) {
	o.Latest = &v
}

// GetSupportEndsOn returns the SupportEndsOn field value if set, zero value otherwise.
func (o *GatewaySupportedVersionsInner) GetSupportEndsOn() time.Time {
	if o == nil || isNil(o.SupportEndsOn) {
		var ret time.Time
		return ret
	}
	return *o.SupportEndsOn
}

// GetSupportEndsOnOk returns a tuple with the SupportEndsOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewaySupportedVersionsInner) GetSupportEndsOnOk() (*time.Time, bool) {
	if o == nil || isNil(o.SupportEndsOn) {
    return nil, false
	}
	return o.SupportEndsOn, true
}

// HasSupportEndsOn returns a boolean if a field has been set.
func (o *GatewaySupportedVersionsInner) HasSupportEndsOn() bool {
	if o != nil && !isNil(o.SupportEndsOn) {
		return true
	}

	return false
}

// SetSupportEndsOn gets a reference to the given time.Time and assigns it to the SupportEndsOn field.
func (o *GatewaySupportedVersionsInner) SetSupportEndsOn(v time.Time) {
	o.SupportEndsOn = &v
}

// GetDaysUntilSupportEnds returns the DaysUntilSupportEnds field value if set, zero value otherwise.
func (o *GatewaySupportedVersionsInner) GetDaysUntilSupportEnds() int32 {
	if o == nil || isNil(o.DaysUntilSupportEnds) {
		var ret int32
		return ret
	}
	return *o.DaysUntilSupportEnds
}

// GetDaysUntilSupportEndsOk returns a tuple with the DaysUntilSupportEnds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewaySupportedVersionsInner) GetDaysUntilSupportEndsOk() (*int32, bool) {
	if o == nil || isNil(o.DaysUntilSupportEnds) {
    return nil, false
	}
	return o.DaysUntilSupportEnds, true
}

// HasDaysUntilSupportEnds returns a boolean if a field has been set.
func (o *GatewaySupportedVersionsInner) HasDaysUntilSupportEnds() bool {
	if o != nil && !isNil(o.DaysUntilSupportEnds) {
		return true
	}

	return false
}

// SetDaysUntilSupportEnds gets a reference to the given int32 and assigns it to the DaysUntilSupportEnds field.
func (o *GatewaySupportedVersionsInner) SetDaysUntilSupportEnds(v int32) {
	o.DaysUntilSupportEnds = &v
}

func (o GatewaySupportedVersionsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !isNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !isNil(o.Recommended) {
		toSerialize["recommended"] = o.Recommended
	}
	if !isNil(o.Latest) {
		toSerialize["latest"] = o.Latest
	}
	if !isNil(o.SupportEndsOn) {
		toSerialize["supportEndsOn"] = o.SupportEndsOn
	}
	if !isNil(o.DaysUntilSupportEnds) {
		toSerialize["daysUntilSupportEnds"] = o.DaysUntilSupportEnds
	}
	return json.Marshal(toSerialize)
}

type NullableGatewaySupportedVersionsInner struct {
	value *GatewaySupportedVersionsInner
	isSet bool
}

func (v NullableGatewaySupportedVersionsInner) Get() *GatewaySupportedVersionsInner {
	return v.value
}

func (v *NullableGatewaySupportedVersionsInner) Set(val *GatewaySupportedVersionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewaySupportedVersionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewaySupportedVersionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewaySupportedVersionsInner(val *GatewaySupportedVersionsInner) *NullableGatewaySupportedVersionsInner {
	return &NullableGatewaySupportedVersionsInner{value: val, isSet: true}
}

func (v NullableGatewaySupportedVersionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewaySupportedVersionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


