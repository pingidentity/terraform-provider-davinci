/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// TemplateContentPush struct for TemplateContentPush
type TemplateContentPush struct {
	// The template id.
	Id *string `json:"id,omitempty"`
	// The time the resource was created.
	CreatedAt *string `json:"createdAt,omitempty"`
	// The time the resource was last updated.
	UpdatedAt *string `json:"updatedAt,omitempty"`
	// Specifies whether the template is a predefined default template.
	Default *bool `json:"default,omitempty"`
	// A valid case-insensitive locale, complying with the ISO-639 language code and ISO-3166 country code standards: Two-character language code, for example, \"en\". Two-character language code followed by a two-character country code, separated by an underscore or dash, for example: \"en_GB\", \"en-GB\". Cannot be changed after it is initially set in `POST /environments/{{envID}}/templates/{{templateName}}/contents`. 
	Locale string `json:"locale"`
	DeliveryMethod EnumTemplateContentDeliveryMethod `json:"deliveryMethod"`
	// Holds the unique user-defined name for each content variant that uses the same template + `deliveryMethod` + `locale` combination. This property is case insensitive and has a limit of 100 characters. For more information, see [Creating custom contents](https://apidocs.pingidentity.com/pingone/platform/v1/api/#notifications-templates-creating-custom-contents).
	Variant *string `json:"variant,omitempty"`
	// The push title (maximum 200 characters). If supported, this can include variables.
	Title string `json:"title"`
	// The push text (maximum 400 characters for push text). If supported, this can include variables.
	Body string `json:"body"`
	PushCategory *EnumTemplateContentPushCategory `json:"pushCategory,omitempty"`
}

// NewTemplateContentPush instantiates a new TemplateContentPush object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateContentPush(locale string, deliveryMethod EnumTemplateContentDeliveryMethod, title string, body string) *TemplateContentPush {
	this := TemplateContentPush{}
	this.Locale = locale
	this.DeliveryMethod = deliveryMethod
	this.Title = title
	this.Body = body
	return &this
}

// NewTemplateContentPushWithDefaults instantiates a new TemplateContentPush object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateContentPushWithDefaults() *TemplateContentPush {
	this := TemplateContentPush{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TemplateContentPush) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateContentPush) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TemplateContentPush) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TemplateContentPush) SetId(v string) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *TemplateContentPush) GetCreatedAt() string {
	if o == nil || isNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateContentPush) GetCreatedAtOk() (*string, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *TemplateContentPush) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *TemplateContentPush) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *TemplateContentPush) GetUpdatedAt() string {
	if o == nil || isNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateContentPush) GetUpdatedAtOk() (*string, bool) {
	if o == nil || isNil(o.UpdatedAt) {
    return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TemplateContentPush) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *TemplateContentPush) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *TemplateContentPush) GetDefault() bool {
	if o == nil || isNil(o.Default) {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateContentPush) GetDefaultOk() (*bool, bool) {
	if o == nil || isNil(o.Default) {
    return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *TemplateContentPush) HasDefault() bool {
	if o != nil && !isNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *TemplateContentPush) SetDefault(v bool) {
	o.Default = &v
}

// GetLocale returns the Locale field value
func (o *TemplateContentPush) GetLocale() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value
// and a boolean to check if the value has been set.
func (o *TemplateContentPush) GetLocaleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Locale, true
}

// SetLocale sets field value
func (o *TemplateContentPush) SetLocale(v string) {
	o.Locale = v
}

// GetDeliveryMethod returns the DeliveryMethod field value
func (o *TemplateContentPush) GetDeliveryMethod() EnumTemplateContentDeliveryMethod {
	if o == nil {
		var ret EnumTemplateContentDeliveryMethod
		return ret
	}

	return o.DeliveryMethod
}

// GetDeliveryMethodOk returns a tuple with the DeliveryMethod field value
// and a boolean to check if the value has been set.
func (o *TemplateContentPush) GetDeliveryMethodOk() (*EnumTemplateContentDeliveryMethod, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DeliveryMethod, true
}

// SetDeliveryMethod sets field value
func (o *TemplateContentPush) SetDeliveryMethod(v EnumTemplateContentDeliveryMethod) {
	o.DeliveryMethod = v
}

// GetVariant returns the Variant field value if set, zero value otherwise.
func (o *TemplateContentPush) GetVariant() string {
	if o == nil || isNil(o.Variant) {
		var ret string
		return ret
	}
	return *o.Variant
}

// GetVariantOk returns a tuple with the Variant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateContentPush) GetVariantOk() (*string, bool) {
	if o == nil || isNil(o.Variant) {
    return nil, false
	}
	return o.Variant, true
}

// HasVariant returns a boolean if a field has been set.
func (o *TemplateContentPush) HasVariant() bool {
	if o != nil && !isNil(o.Variant) {
		return true
	}

	return false
}

// SetVariant gets a reference to the given string and assigns it to the Variant field.
func (o *TemplateContentPush) SetVariant(v string) {
	o.Variant = &v
}

// GetTitle returns the Title field value
func (o *TemplateContentPush) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *TemplateContentPush) GetTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *TemplateContentPush) SetTitle(v string) {
	o.Title = v
}

// GetBody returns the Body field value
func (o *TemplateContentPush) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *TemplateContentPush) GetBodyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *TemplateContentPush) SetBody(v string) {
	o.Body = v
}

// GetPushCategory returns the PushCategory field value if set, zero value otherwise.
func (o *TemplateContentPush) GetPushCategory() EnumTemplateContentPushCategory {
	if o == nil || isNil(o.PushCategory) {
		var ret EnumTemplateContentPushCategory
		return ret
	}
	return *o.PushCategory
}

// GetPushCategoryOk returns a tuple with the PushCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateContentPush) GetPushCategoryOk() (*EnumTemplateContentPushCategory, bool) {
	if o == nil || isNil(o.PushCategory) {
    return nil, false
	}
	return o.PushCategory, true
}

// HasPushCategory returns a boolean if a field has been set.
func (o *TemplateContentPush) HasPushCategory() bool {
	if o != nil && !isNil(o.PushCategory) {
		return true
	}

	return false
}

// SetPushCategory gets a reference to the given EnumTemplateContentPushCategory and assigns it to the PushCategory field.
func (o *TemplateContentPush) SetPushCategory(v EnumTemplateContentPushCategory) {
	o.PushCategory = &v
}

func (o TemplateContentPush) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !isNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if true {
		toSerialize["locale"] = o.Locale
	}
	if true {
		toSerialize["deliveryMethod"] = o.DeliveryMethod
	}
	if !isNil(o.Variant) {
		toSerialize["variant"] = o.Variant
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["body"] = o.Body
	}
	if !isNil(o.PushCategory) {
		toSerialize["pushCategory"] = o.PushCategory
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateContentPush struct {
	value *TemplateContentPush
	isSet bool
}

func (v NullableTemplateContentPush) Get() *TemplateContentPush {
	return v.value
}

func (v *NullableTemplateContentPush) Set(val *TemplateContentPush) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateContentPush) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateContentPush) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateContentPush(val *TemplateContentPush) *NullableTemplateContentPush {
	return &NullableTemplateContentPush{value: val, isSet: true}
}

func (v NullableTemplateContentPush) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateContentPush) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


