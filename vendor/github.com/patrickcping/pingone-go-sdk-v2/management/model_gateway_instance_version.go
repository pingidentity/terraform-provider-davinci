/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// GatewayInstanceVersion An object containing the version of the gateway running for the instance.
type GatewayInstanceVersion struct {
	// A string that specifies the version number of the gateway running for the instance. This is a required property.
	VersionNumber *string `json:"versionNumber,omitempty"`
	UpdateStatus *EnumUpdateStatus `json:"updateStatus,omitempty"`
}

// NewGatewayInstanceVersion instantiates a new GatewayInstanceVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayInstanceVersion() *GatewayInstanceVersion {
	this := GatewayInstanceVersion{}
	return &this
}

// NewGatewayInstanceVersionWithDefaults instantiates a new GatewayInstanceVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayInstanceVersionWithDefaults() *GatewayInstanceVersion {
	this := GatewayInstanceVersion{}
	return &this
}

// GetVersionNumber returns the VersionNumber field value if set, zero value otherwise.
func (o *GatewayInstanceVersion) GetVersionNumber() string {
	if o == nil || isNil(o.VersionNumber) {
		var ret string
		return ret
	}
	return *o.VersionNumber
}

// GetVersionNumberOk returns a tuple with the VersionNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayInstanceVersion) GetVersionNumberOk() (*string, bool) {
	if o == nil || isNil(o.VersionNumber) {
    return nil, false
	}
	return o.VersionNumber, true
}

// HasVersionNumber returns a boolean if a field has been set.
func (o *GatewayInstanceVersion) HasVersionNumber() bool {
	if o != nil && !isNil(o.VersionNumber) {
		return true
	}

	return false
}

// SetVersionNumber gets a reference to the given string and assigns it to the VersionNumber field.
func (o *GatewayInstanceVersion) SetVersionNumber(v string) {
	o.VersionNumber = &v
}

// GetUpdateStatus returns the UpdateStatus field value if set, zero value otherwise.
func (o *GatewayInstanceVersion) GetUpdateStatus() EnumUpdateStatus {
	if o == nil || isNil(o.UpdateStatus) {
		var ret EnumUpdateStatus
		return ret
	}
	return *o.UpdateStatus
}

// GetUpdateStatusOk returns a tuple with the UpdateStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayInstanceVersion) GetUpdateStatusOk() (*EnumUpdateStatus, bool) {
	if o == nil || isNil(o.UpdateStatus) {
    return nil, false
	}
	return o.UpdateStatus, true
}

// HasUpdateStatus returns a boolean if a field has been set.
func (o *GatewayInstanceVersion) HasUpdateStatus() bool {
	if o != nil && !isNil(o.UpdateStatus) {
		return true
	}

	return false
}

// SetUpdateStatus gets a reference to the given EnumUpdateStatus and assigns it to the UpdateStatus field.
func (o *GatewayInstanceVersion) SetUpdateStatus(v EnumUpdateStatus) {
	o.UpdateStatus = &v
}

func (o GatewayInstanceVersion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.VersionNumber) {
		toSerialize["versionNumber"] = o.VersionNumber
	}
	if !isNil(o.UpdateStatus) {
		toSerialize["updateStatus"] = o.UpdateStatus
	}
	return json.Marshal(toSerialize)
}

type NullableGatewayInstanceVersion struct {
	value *GatewayInstanceVersion
	isSet bool
}

func (v NullableGatewayInstanceVersion) Get() *GatewayInstanceVersion {
	return v.value
}

func (v *NullableGatewayInstanceVersion) Set(val *GatewayInstanceVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayInstanceVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayInstanceVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayInstanceVersion(val *GatewayInstanceVersion) *NullableGatewayInstanceVersion {
	return &NullableGatewayInstanceVersion{value: val, isSet: true}
}

func (v NullableGatewayInstanceVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayInstanceVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


