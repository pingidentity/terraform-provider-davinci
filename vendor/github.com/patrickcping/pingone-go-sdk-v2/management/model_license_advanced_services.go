/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// LicenseAdvancedServices struct for LicenseAdvancedServices
type LicenseAdvancedServices struct {
	PingId *LicenseAdvancedServicesPingId `json:"pingId,omitempty"`
}

// NewLicenseAdvancedServices instantiates a new LicenseAdvancedServices object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLicenseAdvancedServices() *LicenseAdvancedServices {
	this := LicenseAdvancedServices{}
	return &this
}

// NewLicenseAdvancedServicesWithDefaults instantiates a new LicenseAdvancedServices object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLicenseAdvancedServicesWithDefaults() *LicenseAdvancedServices {
	this := LicenseAdvancedServices{}
	return &this
}

// GetPingId returns the PingId field value if set, zero value otherwise.
func (o *LicenseAdvancedServices) GetPingId() LicenseAdvancedServicesPingId {
	if o == nil || isNil(o.PingId) {
		var ret LicenseAdvancedServicesPingId
		return ret
	}
	return *o.PingId
}

// GetPingIdOk returns a tuple with the PingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseAdvancedServices) GetPingIdOk() (*LicenseAdvancedServicesPingId, bool) {
	if o == nil || isNil(o.PingId) {
    return nil, false
	}
	return o.PingId, true
}

// HasPingId returns a boolean if a field has been set.
func (o *LicenseAdvancedServices) HasPingId() bool {
	if o != nil && !isNil(o.PingId) {
		return true
	}

	return false
}

// SetPingId gets a reference to the given LicenseAdvancedServicesPingId and assigns it to the PingId field.
func (o *LicenseAdvancedServices) SetPingId(v LicenseAdvancedServicesPingId) {
	o.PingId = &v
}

func (o LicenseAdvancedServices) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PingId) {
		toSerialize["pingId"] = o.PingId
	}
	return json.Marshal(toSerialize)
}

type NullableLicenseAdvancedServices struct {
	value *LicenseAdvancedServices
	isSet bool
}

func (v NullableLicenseAdvancedServices) Get() *LicenseAdvancedServices {
	return v.value
}

func (v *NullableLicenseAdvancedServices) Set(val *LicenseAdvancedServices) {
	v.value = val
	v.isSet = true
}

func (v NullableLicenseAdvancedServices) IsSet() bool {
	return v.isSet
}

func (v *NullableLicenseAdvancedServices) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLicenseAdvancedServices(val *LicenseAdvancedServices) *NullableLicenseAdvancedServices {
	return &NullableLicenseAdvancedServices{value: val, isSet: true}
}

func (v NullableLicenseAdvancedServices) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLicenseAdvancedServices) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


