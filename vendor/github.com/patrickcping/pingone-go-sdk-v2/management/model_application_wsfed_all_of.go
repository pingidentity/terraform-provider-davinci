/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// ApplicationWSFEDAllOf struct for ApplicationWSFEDAllOf
type ApplicationWSFEDAllOf struct {
	// The service provider ID. Defaults to `urn:federation:MicrosoftOnline`.
	AudienceRestriction *string `json:"audienceRestriction,omitempty"`
	// The federated domain name (for example, the Azure custom domain).
	DomainName string `json:"domainName"`
	IdpSigning ApplicationWSFEDAllOfIdpSigning `json:"idpSigning"`
	Kerberos *ApplicationWSFEDAllOfKerberos `json:"kerberos,omitempty"`
	// The URL that the replying party (such as, Office365) uses to accept submissions of RequestSecurityTokenResponse messages that are a result of SSO requests.
	ReplyUrl string `json:"replyUrl"`
	// The single logout endpoint URL.
	SloEndpoint *string `json:"sloEndpoint,omitempty"`
}

// NewApplicationWSFEDAllOf instantiates a new ApplicationWSFEDAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationWSFEDAllOf(domainName string, idpSigning ApplicationWSFEDAllOfIdpSigning, replyUrl string) *ApplicationWSFEDAllOf {
	this := ApplicationWSFEDAllOf{}
	var audienceRestriction string = "urn:federation:MicrosoftOnline"
	this.AudienceRestriction = &audienceRestriction
	this.DomainName = domainName
	this.IdpSigning = idpSigning
	this.ReplyUrl = replyUrl
	return &this
}

// NewApplicationWSFEDAllOfWithDefaults instantiates a new ApplicationWSFEDAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationWSFEDAllOfWithDefaults() *ApplicationWSFEDAllOf {
	this := ApplicationWSFEDAllOf{}
	var audienceRestriction string = "urn:federation:MicrosoftOnline"
	this.AudienceRestriction = &audienceRestriction
	return &this
}

// GetAudienceRestriction returns the AudienceRestriction field value if set, zero value otherwise.
func (o *ApplicationWSFEDAllOf) GetAudienceRestriction() string {
	if o == nil || isNil(o.AudienceRestriction) {
		var ret string
		return ret
	}
	return *o.AudienceRestriction
}

// GetAudienceRestrictionOk returns a tuple with the AudienceRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationWSFEDAllOf) GetAudienceRestrictionOk() (*string, bool) {
	if o == nil || isNil(o.AudienceRestriction) {
    return nil, false
	}
	return o.AudienceRestriction, true
}

// HasAudienceRestriction returns a boolean if a field has been set.
func (o *ApplicationWSFEDAllOf) HasAudienceRestriction() bool {
	if o != nil && !isNil(o.AudienceRestriction) {
		return true
	}

	return false
}

// SetAudienceRestriction gets a reference to the given string and assigns it to the AudienceRestriction field.
func (o *ApplicationWSFEDAllOf) SetAudienceRestriction(v string) {
	o.AudienceRestriction = &v
}

// GetDomainName returns the DomainName field value
func (o *ApplicationWSFEDAllOf) GetDomainName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value
// and a boolean to check if the value has been set.
func (o *ApplicationWSFEDAllOf) GetDomainNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DomainName, true
}

// SetDomainName sets field value
func (o *ApplicationWSFEDAllOf) SetDomainName(v string) {
	o.DomainName = v
}

// GetIdpSigning returns the IdpSigning field value
func (o *ApplicationWSFEDAllOf) GetIdpSigning() ApplicationWSFEDAllOfIdpSigning {
	if o == nil {
		var ret ApplicationWSFEDAllOfIdpSigning
		return ret
	}

	return o.IdpSigning
}

// GetIdpSigningOk returns a tuple with the IdpSigning field value
// and a boolean to check if the value has been set.
func (o *ApplicationWSFEDAllOf) GetIdpSigningOk() (*ApplicationWSFEDAllOfIdpSigning, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IdpSigning, true
}

// SetIdpSigning sets field value
func (o *ApplicationWSFEDAllOf) SetIdpSigning(v ApplicationWSFEDAllOfIdpSigning) {
	o.IdpSigning = v
}

// GetKerberos returns the Kerberos field value if set, zero value otherwise.
func (o *ApplicationWSFEDAllOf) GetKerberos() ApplicationWSFEDAllOfKerberos {
	if o == nil || isNil(o.Kerberos) {
		var ret ApplicationWSFEDAllOfKerberos
		return ret
	}
	return *o.Kerberos
}

// GetKerberosOk returns a tuple with the Kerberos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationWSFEDAllOf) GetKerberosOk() (*ApplicationWSFEDAllOfKerberos, bool) {
	if o == nil || isNil(o.Kerberos) {
    return nil, false
	}
	return o.Kerberos, true
}

// HasKerberos returns a boolean if a field has been set.
func (o *ApplicationWSFEDAllOf) HasKerberos() bool {
	if o != nil && !isNil(o.Kerberos) {
		return true
	}

	return false
}

// SetKerberos gets a reference to the given ApplicationWSFEDAllOfKerberos and assigns it to the Kerberos field.
func (o *ApplicationWSFEDAllOf) SetKerberos(v ApplicationWSFEDAllOfKerberos) {
	o.Kerberos = &v
}

// GetReplyUrl returns the ReplyUrl field value
func (o *ApplicationWSFEDAllOf) GetReplyUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReplyUrl
}

// GetReplyUrlOk returns a tuple with the ReplyUrl field value
// and a boolean to check if the value has been set.
func (o *ApplicationWSFEDAllOf) GetReplyUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ReplyUrl, true
}

// SetReplyUrl sets field value
func (o *ApplicationWSFEDAllOf) SetReplyUrl(v string) {
	o.ReplyUrl = v
}

// GetSloEndpoint returns the SloEndpoint field value if set, zero value otherwise.
func (o *ApplicationWSFEDAllOf) GetSloEndpoint() string {
	if o == nil || isNil(o.SloEndpoint) {
		var ret string
		return ret
	}
	return *o.SloEndpoint
}

// GetSloEndpointOk returns a tuple with the SloEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationWSFEDAllOf) GetSloEndpointOk() (*string, bool) {
	if o == nil || isNil(o.SloEndpoint) {
    return nil, false
	}
	return o.SloEndpoint, true
}

// HasSloEndpoint returns a boolean if a field has been set.
func (o *ApplicationWSFEDAllOf) HasSloEndpoint() bool {
	if o != nil && !isNil(o.SloEndpoint) {
		return true
	}

	return false
}

// SetSloEndpoint gets a reference to the given string and assigns it to the SloEndpoint field.
func (o *ApplicationWSFEDAllOf) SetSloEndpoint(v string) {
	o.SloEndpoint = &v
}

func (o ApplicationWSFEDAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AudienceRestriction) {
		toSerialize["audienceRestriction"] = o.AudienceRestriction
	}
	if true {
		toSerialize["domainName"] = o.DomainName
	}
	if true {
		toSerialize["idpSigning"] = o.IdpSigning
	}
	if !isNil(o.Kerberos) {
		toSerialize["kerberos"] = o.Kerberos
	}
	if true {
		toSerialize["replyUrl"] = o.ReplyUrl
	}
	if !isNil(o.SloEndpoint) {
		toSerialize["sloEndpoint"] = o.SloEndpoint
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationWSFEDAllOf struct {
	value *ApplicationWSFEDAllOf
	isSet bool
}

func (v NullableApplicationWSFEDAllOf) Get() *ApplicationWSFEDAllOf {
	return v.value
}

func (v *NullableApplicationWSFEDAllOf) Set(val *ApplicationWSFEDAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationWSFEDAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationWSFEDAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationWSFEDAllOf(val *ApplicationWSFEDAllOf) *NullableApplicationWSFEDAllOf {
	return &NullableApplicationWSFEDAllOf{value: val, isSet: true}
}

func (v NullableApplicationWSFEDAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationWSFEDAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


