/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// SignOnPolicyActionAgreement struct for SignOnPolicyActionAgreement
type SignOnPolicyActionAgreement struct {
	Links map[string]interface{} `json:"_links,omitempty"`
	Condition *SignOnPolicyActionCommonConditionOrOrInner `json:"condition,omitempty"`
	Environment *ObjectEnvironment `json:"environment,omitempty"`
	// A string that specifies the sign-on policy assignment resourceâ€™s unique identifier.
	Id *string `json:"id,omitempty"`
	// An integer that specifies the order in which the policy referenced by this assignment is evaluated during an authentication flow relative to other policies. An assignment with a lower priority will be evaluated first. This is a required property.
	Priority int32 `json:"priority"`
	SignOnPolicy *SignOnPolicyActionCommonSignOnPolicy `json:"signOnPolicy,omitempty"`
	Type EnumSignOnPolicyType `json:"type"`
	Agreement SignOnPolicyActionAgreementAllOfAgreement `json:"agreement"`
	// When enabled, the `Do Not Accept` button will terminate the Flow and display an error message to the user.
	DisableDeclineOption *bool `json:"disableDeclineOption,omitempty"`
}

// NewSignOnPolicyActionAgreement instantiates a new SignOnPolicyActionAgreement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignOnPolicyActionAgreement(priority int32, type_ EnumSignOnPolicyType, agreement SignOnPolicyActionAgreementAllOfAgreement) *SignOnPolicyActionAgreement {
	this := SignOnPolicyActionAgreement{}
	this.Priority = priority
	this.Type = type_
	this.Agreement = agreement
	return &this
}

// NewSignOnPolicyActionAgreementWithDefaults instantiates a new SignOnPolicyActionAgreement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignOnPolicyActionAgreementWithDefaults() *SignOnPolicyActionAgreement {
	this := SignOnPolicyActionAgreement{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *SignOnPolicyActionAgreement) GetLinks() map[string]interface{} {
	if o == nil || isNil(o.Links) {
		var ret map[string]interface{}
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionAgreement) GetLinksOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Links) {
    return map[string]interface{}{}, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *SignOnPolicyActionAgreement) HasLinks() bool {
	if o != nil && !isNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]interface{} and assigns it to the Links field.
func (o *SignOnPolicyActionAgreement) SetLinks(v map[string]interface{}) {
	o.Links = v
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *SignOnPolicyActionAgreement) GetCondition() SignOnPolicyActionCommonConditionOrOrInner {
	if o == nil || isNil(o.Condition) {
		var ret SignOnPolicyActionCommonConditionOrOrInner
		return ret
	}
	return *o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionAgreement) GetConditionOk() (*SignOnPolicyActionCommonConditionOrOrInner, bool) {
	if o == nil || isNil(o.Condition) {
    return nil, false
	}
	return o.Condition, true
}

// HasCondition returns a boolean if a field has been set.
func (o *SignOnPolicyActionAgreement) HasCondition() bool {
	if o != nil && !isNil(o.Condition) {
		return true
	}

	return false
}

// SetCondition gets a reference to the given SignOnPolicyActionCommonConditionOrOrInner and assigns it to the Condition field.
func (o *SignOnPolicyActionAgreement) SetCondition(v SignOnPolicyActionCommonConditionOrOrInner) {
	o.Condition = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *SignOnPolicyActionAgreement) GetEnvironment() ObjectEnvironment {
	if o == nil || isNil(o.Environment) {
		var ret ObjectEnvironment
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionAgreement) GetEnvironmentOk() (*ObjectEnvironment, bool) {
	if o == nil || isNil(o.Environment) {
    return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *SignOnPolicyActionAgreement) HasEnvironment() bool {
	if o != nil && !isNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given ObjectEnvironment and assigns it to the Environment field.
func (o *SignOnPolicyActionAgreement) SetEnvironment(v ObjectEnvironment) {
	o.Environment = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SignOnPolicyActionAgreement) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionAgreement) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SignOnPolicyActionAgreement) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SignOnPolicyActionAgreement) SetId(v string) {
	o.Id = &v
}

// GetPriority returns the Priority field value
func (o *SignOnPolicyActionAgreement) GetPriority() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionAgreement) GetPriorityOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *SignOnPolicyActionAgreement) SetPriority(v int32) {
	o.Priority = v
}

// GetSignOnPolicy returns the SignOnPolicy field value if set, zero value otherwise.
func (o *SignOnPolicyActionAgreement) GetSignOnPolicy() SignOnPolicyActionCommonSignOnPolicy {
	if o == nil || isNil(o.SignOnPolicy) {
		var ret SignOnPolicyActionCommonSignOnPolicy
		return ret
	}
	return *o.SignOnPolicy
}

// GetSignOnPolicyOk returns a tuple with the SignOnPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionAgreement) GetSignOnPolicyOk() (*SignOnPolicyActionCommonSignOnPolicy, bool) {
	if o == nil || isNil(o.SignOnPolicy) {
    return nil, false
	}
	return o.SignOnPolicy, true
}

// HasSignOnPolicy returns a boolean if a field has been set.
func (o *SignOnPolicyActionAgreement) HasSignOnPolicy() bool {
	if o != nil && !isNil(o.SignOnPolicy) {
		return true
	}

	return false
}

// SetSignOnPolicy gets a reference to the given SignOnPolicyActionCommonSignOnPolicy and assigns it to the SignOnPolicy field.
func (o *SignOnPolicyActionAgreement) SetSignOnPolicy(v SignOnPolicyActionCommonSignOnPolicy) {
	o.SignOnPolicy = &v
}

// GetType returns the Type field value
func (o *SignOnPolicyActionAgreement) GetType() EnumSignOnPolicyType {
	if o == nil {
		var ret EnumSignOnPolicyType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionAgreement) GetTypeOk() (*EnumSignOnPolicyType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SignOnPolicyActionAgreement) SetType(v EnumSignOnPolicyType) {
	o.Type = v
}

// GetAgreement returns the Agreement field value
func (o *SignOnPolicyActionAgreement) GetAgreement() SignOnPolicyActionAgreementAllOfAgreement {
	if o == nil {
		var ret SignOnPolicyActionAgreementAllOfAgreement
		return ret
	}

	return o.Agreement
}

// GetAgreementOk returns a tuple with the Agreement field value
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionAgreement) GetAgreementOk() (*SignOnPolicyActionAgreementAllOfAgreement, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Agreement, true
}

// SetAgreement sets field value
func (o *SignOnPolicyActionAgreement) SetAgreement(v SignOnPolicyActionAgreementAllOfAgreement) {
	o.Agreement = v
}

// GetDisableDeclineOption returns the DisableDeclineOption field value if set, zero value otherwise.
func (o *SignOnPolicyActionAgreement) GetDisableDeclineOption() bool {
	if o == nil || isNil(o.DisableDeclineOption) {
		var ret bool
		return ret
	}
	return *o.DisableDeclineOption
}

// GetDisableDeclineOptionOk returns a tuple with the DisableDeclineOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionAgreement) GetDisableDeclineOptionOk() (*bool, bool) {
	if o == nil || isNil(o.DisableDeclineOption) {
    return nil, false
	}
	return o.DisableDeclineOption, true
}

// HasDisableDeclineOption returns a boolean if a field has been set.
func (o *SignOnPolicyActionAgreement) HasDisableDeclineOption() bool {
	if o != nil && !isNil(o.DisableDeclineOption) {
		return true
	}

	return false
}

// SetDisableDeclineOption gets a reference to the given bool and assigns it to the DisableDeclineOption field.
func (o *SignOnPolicyActionAgreement) SetDisableDeclineOption(v bool) {
	o.DisableDeclineOption = &v
}

func (o SignOnPolicyActionAgreement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !isNil(o.Condition) {
		toSerialize["condition"] = o.Condition
	}
	if !isNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["priority"] = o.Priority
	}
	if !isNil(o.SignOnPolicy) {
		toSerialize["signOnPolicy"] = o.SignOnPolicy
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["agreement"] = o.Agreement
	}
	if !isNil(o.DisableDeclineOption) {
		toSerialize["disableDeclineOption"] = o.DisableDeclineOption
	}
	return json.Marshal(toSerialize)
}

type NullableSignOnPolicyActionAgreement struct {
	value *SignOnPolicyActionAgreement
	isSet bool
}

func (v NullableSignOnPolicyActionAgreement) Get() *SignOnPolicyActionAgreement {
	return v.value
}

func (v *NullableSignOnPolicyActionAgreement) Set(val *SignOnPolicyActionAgreement) {
	v.value = val
	v.isSet = true
}

func (v NullableSignOnPolicyActionAgreement) IsSet() bool {
	return v.isSet
}

func (v *NullableSignOnPolicyActionAgreement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignOnPolicyActionAgreement(val *SignOnPolicyActionAgreement) *NullableSignOnPolicyActionAgreement {
	return &NullableSignOnPolicyActionAgreement{value: val, isSet: true}
}

func (v NullableSignOnPolicyActionAgreement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignOnPolicyActionAgreement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


