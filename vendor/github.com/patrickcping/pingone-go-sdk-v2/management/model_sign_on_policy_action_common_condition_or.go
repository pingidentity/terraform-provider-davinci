/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// SignOnPolicyActionCommonConditionOr struct for SignOnPolicyActionCommonConditionOr
type SignOnPolicyActionCommonConditionOr struct {
	Or []SignOnPolicyActionCommonConditionOrOrInner `json:"or,omitempty"`
}

// NewSignOnPolicyActionCommonConditionOr instantiates a new SignOnPolicyActionCommonConditionOr object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignOnPolicyActionCommonConditionOr() *SignOnPolicyActionCommonConditionOr {
	this := SignOnPolicyActionCommonConditionOr{}
	return &this
}

// NewSignOnPolicyActionCommonConditionOrWithDefaults instantiates a new SignOnPolicyActionCommonConditionOr object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignOnPolicyActionCommonConditionOrWithDefaults() *SignOnPolicyActionCommonConditionOr {
	this := SignOnPolicyActionCommonConditionOr{}
	return &this
}

// GetOr returns the Or field value if set, zero value otherwise.
func (o *SignOnPolicyActionCommonConditionOr) GetOr() []SignOnPolicyActionCommonConditionOrOrInner {
	if o == nil || isNil(o.Or) {
		var ret []SignOnPolicyActionCommonConditionOrOrInner
		return ret
	}
	return o.Or
}

// GetOrOk returns a tuple with the Or field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionCommonConditionOr) GetOrOk() ([]SignOnPolicyActionCommonConditionOrOrInner, bool) {
	if o == nil || isNil(o.Or) {
    return nil, false
	}
	return o.Or, true
}

// HasOr returns a boolean if a field has been set.
func (o *SignOnPolicyActionCommonConditionOr) HasOr() bool {
	if o != nil && !isNil(o.Or) {
		return true
	}

	return false
}

// SetOr gets a reference to the given []SignOnPolicyActionCommonConditionOrOrInner and assigns it to the Or field.
func (o *SignOnPolicyActionCommonConditionOr) SetOr(v []SignOnPolicyActionCommonConditionOrOrInner) {
	o.Or = v
}

func (o SignOnPolicyActionCommonConditionOr) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Or) {
		toSerialize["or"] = o.Or
	}
	return json.Marshal(toSerialize)
}

type NullableSignOnPolicyActionCommonConditionOr struct {
	value *SignOnPolicyActionCommonConditionOr
	isSet bool
}

func (v NullableSignOnPolicyActionCommonConditionOr) Get() *SignOnPolicyActionCommonConditionOr {
	return v.value
}

func (v *NullableSignOnPolicyActionCommonConditionOr) Set(val *SignOnPolicyActionCommonConditionOr) {
	v.value = val
	v.isSet = true
}

func (v NullableSignOnPolicyActionCommonConditionOr) IsSet() bool {
	return v.isSet
}

func (v *NullableSignOnPolicyActionCommonConditionOr) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignOnPolicyActionCommonConditionOr(val *SignOnPolicyActionCommonConditionOr) *NullableSignOnPolicyActionCommonConditionOr {
	return &NullableSignOnPolicyActionCommonConditionOr{value: val, isSet: true}
}

func (v NullableSignOnPolicyActionCommonConditionOr) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignOnPolicyActionCommonConditionOr) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


