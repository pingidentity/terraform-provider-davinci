/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// TemplateContentSMSAllOf struct for TemplateContentSMSAllOf
type TemplateContentSMSAllOf struct {
	// The SMS text. UC-2 encoding is used for text that contains non GSM-7 characters. UC-2 encoded text cannot exceed 67 characters. GSM-7 encoded text cannot exceed 153 characters. If supported, it can include variables. 
	Content string `json:"content"`
	// The SMS sender ID. This property can contain only alphanumeric characters and spaces, and its length cannot exceed 11 characters. In some countries, it is impossible to send an SMS with an alphanumeric sender ID. For those countries, the sender ID must be empty. For SMS recipients in specific countries, refer to Twilio's documentation on [International support for Alphanumeric Sender ID](https://support.twilio.com/hc/en-us/articles/223133767-International-support-for-Alphanumeric-Sender-ID).
	Sender *string `json:"sender,omitempty"`
}

// NewTemplateContentSMSAllOf instantiates a new TemplateContentSMSAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateContentSMSAllOf(content string) *TemplateContentSMSAllOf {
	this := TemplateContentSMSAllOf{}
	this.Content = content
	return &this
}

// NewTemplateContentSMSAllOfWithDefaults instantiates a new TemplateContentSMSAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateContentSMSAllOfWithDefaults() *TemplateContentSMSAllOf {
	this := TemplateContentSMSAllOf{}
	return &this
}

// GetContent returns the Content field value
func (o *TemplateContentSMSAllOf) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *TemplateContentSMSAllOf) GetContentOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *TemplateContentSMSAllOf) SetContent(v string) {
	o.Content = v
}

// GetSender returns the Sender field value if set, zero value otherwise.
func (o *TemplateContentSMSAllOf) GetSender() string {
	if o == nil || isNil(o.Sender) {
		var ret string
		return ret
	}
	return *o.Sender
}

// GetSenderOk returns a tuple with the Sender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateContentSMSAllOf) GetSenderOk() (*string, bool) {
	if o == nil || isNil(o.Sender) {
    return nil, false
	}
	return o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *TemplateContentSMSAllOf) HasSender() bool {
	if o != nil && !isNil(o.Sender) {
		return true
	}

	return false
}

// SetSender gets a reference to the given string and assigns it to the Sender field.
func (o *TemplateContentSMSAllOf) SetSender(v string) {
	o.Sender = &v
}

func (o TemplateContentSMSAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["content"] = o.Content
	}
	if !isNil(o.Sender) {
		toSerialize["sender"] = o.Sender
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateContentSMSAllOf struct {
	value *TemplateContentSMSAllOf
	isSet bool
}

func (v NullableTemplateContentSMSAllOf) Get() *TemplateContentSMSAllOf {
	return v.value
}

func (v *NullableTemplateContentSMSAllOf) Set(val *TemplateContentSMSAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateContentSMSAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateContentSMSAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateContentSMSAllOf(val *TemplateContentSMSAllOf) *NullableTemplateContentSMSAllOf {
	return &NullableTemplateContentSMSAllOf{value: val, isSet: true}
}

func (v NullableTemplateContentSMSAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateContentSMSAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


