/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// GatewayInstance struct for GatewayInstance
type GatewayInstance struct {
	// A boolean that specifies whether or not the gateway instance has one or more connections. This is a required property.
	Connected *bool `json:"connected,omitempty"`
	// A string that specifies the instance ID of the gateway. The gateway instance ID is created by the gateway when it starts up.
	Id *string `json:"id,omitempty"`
	Environment *ObjectEnvironment `json:"environment,omitempty"`
	Gateway *GatewayInstanceGateway `json:"gateway,omitempty"`
	Credential *GatewayInstanceCredential `json:"credential,omitempty"`
	// An array of strings that lists the messages that are maintained by the gateway instance.
	CurrentErrors []string `json:"currentErrors,omitempty"`
	HealthStatus *EnumHealthStatus `json:"healthStatus,omitempty"`
	// A string that specifies the hostname of the container running in the customerâ€™s infrastructure. This is a required property.
	Hostname *string `json:"hostname,omitempty"`
	// A timestamp that specifies when gateway was initialized (when the first connect to PingOne was made).
	InitializedAt *string `json:"initializedAt,omitempty"`
	// A timestamp that specifies the last reported timestamp, heartbeat, or other message.
	LastReportedAt *string `json:"lastReportedAt,omitempty"`
	Version *GatewayInstanceVersion `json:"version,omitempty"`
	// An integer that specifies the gateway instance's busy percentage. When this percentage is high, then more instances should be added.
	BusyPercentage *int32 `json:"busyPercentage,omitempty"`
	// A number that specifies the recent throughput of the gateway instance.
	OperationsPerSecond *float32 `json:"operationsPerSecond,omitempty"`
	// A number that specifies the processing time of the gateway instance in milliseconds.
	ResponseTimeMillis *float32 `json:"responseTimeMillis,omitempty"`
}

// NewGatewayInstance instantiates a new GatewayInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayInstance() *GatewayInstance {
	this := GatewayInstance{}
	return &this
}

// NewGatewayInstanceWithDefaults instantiates a new GatewayInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayInstanceWithDefaults() *GatewayInstance {
	this := GatewayInstance{}
	return &this
}

// GetConnected returns the Connected field value if set, zero value otherwise.
func (o *GatewayInstance) GetConnected() bool {
	if o == nil || isNil(o.Connected) {
		var ret bool
		return ret
	}
	return *o.Connected
}

// GetConnectedOk returns a tuple with the Connected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayInstance) GetConnectedOk() (*bool, bool) {
	if o == nil || isNil(o.Connected) {
    return nil, false
	}
	return o.Connected, true
}

// HasConnected returns a boolean if a field has been set.
func (o *GatewayInstance) HasConnected() bool {
	if o != nil && !isNil(o.Connected) {
		return true
	}

	return false
}

// SetConnected gets a reference to the given bool and assigns it to the Connected field.
func (o *GatewayInstance) SetConnected(v bool) {
	o.Connected = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GatewayInstance) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayInstance) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GatewayInstance) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GatewayInstance) SetId(v string) {
	o.Id = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *GatewayInstance) GetEnvironment() ObjectEnvironment {
	if o == nil || isNil(o.Environment) {
		var ret ObjectEnvironment
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayInstance) GetEnvironmentOk() (*ObjectEnvironment, bool) {
	if o == nil || isNil(o.Environment) {
    return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *GatewayInstance) HasEnvironment() bool {
	if o != nil && !isNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given ObjectEnvironment and assigns it to the Environment field.
func (o *GatewayInstance) SetEnvironment(v ObjectEnvironment) {
	o.Environment = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *GatewayInstance) GetGateway() GatewayInstanceGateway {
	if o == nil || isNil(o.Gateway) {
		var ret GatewayInstanceGateway
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayInstance) GetGatewayOk() (*GatewayInstanceGateway, bool) {
	if o == nil || isNil(o.Gateway) {
    return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *GatewayInstance) HasGateway() bool {
	if o != nil && !isNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given GatewayInstanceGateway and assigns it to the Gateway field.
func (o *GatewayInstance) SetGateway(v GatewayInstanceGateway) {
	o.Gateway = &v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *GatewayInstance) GetCredential() GatewayInstanceCredential {
	if o == nil || isNil(o.Credential) {
		var ret GatewayInstanceCredential
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayInstance) GetCredentialOk() (*GatewayInstanceCredential, bool) {
	if o == nil || isNil(o.Credential) {
    return nil, false
	}
	return o.Credential, true
}

// HasCredential returns a boolean if a field has been set.
func (o *GatewayInstance) HasCredential() bool {
	if o != nil && !isNil(o.Credential) {
		return true
	}

	return false
}

// SetCredential gets a reference to the given GatewayInstanceCredential and assigns it to the Credential field.
func (o *GatewayInstance) SetCredential(v GatewayInstanceCredential) {
	o.Credential = &v
}

// GetCurrentErrors returns the CurrentErrors field value if set, zero value otherwise.
func (o *GatewayInstance) GetCurrentErrors() []string {
	if o == nil || isNil(o.CurrentErrors) {
		var ret []string
		return ret
	}
	return o.CurrentErrors
}

// GetCurrentErrorsOk returns a tuple with the CurrentErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayInstance) GetCurrentErrorsOk() ([]string, bool) {
	if o == nil || isNil(o.CurrentErrors) {
    return nil, false
	}
	return o.CurrentErrors, true
}

// HasCurrentErrors returns a boolean if a field has been set.
func (o *GatewayInstance) HasCurrentErrors() bool {
	if o != nil && !isNil(o.CurrentErrors) {
		return true
	}

	return false
}

// SetCurrentErrors gets a reference to the given []string and assigns it to the CurrentErrors field.
func (o *GatewayInstance) SetCurrentErrors(v []string) {
	o.CurrentErrors = v
}

// GetHealthStatus returns the HealthStatus field value if set, zero value otherwise.
func (o *GatewayInstance) GetHealthStatus() EnumHealthStatus {
	if o == nil || isNil(o.HealthStatus) {
		var ret EnumHealthStatus
		return ret
	}
	return *o.HealthStatus
}

// GetHealthStatusOk returns a tuple with the HealthStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayInstance) GetHealthStatusOk() (*EnumHealthStatus, bool) {
	if o == nil || isNil(o.HealthStatus) {
    return nil, false
	}
	return o.HealthStatus, true
}

// HasHealthStatus returns a boolean if a field has been set.
func (o *GatewayInstance) HasHealthStatus() bool {
	if o != nil && !isNil(o.HealthStatus) {
		return true
	}

	return false
}

// SetHealthStatus gets a reference to the given EnumHealthStatus and assigns it to the HealthStatus field.
func (o *GatewayInstance) SetHealthStatus(v EnumHealthStatus) {
	o.HealthStatus = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *GatewayInstance) GetHostname() string {
	if o == nil || isNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayInstance) GetHostnameOk() (*string, bool) {
	if o == nil || isNil(o.Hostname) {
    return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *GatewayInstance) HasHostname() bool {
	if o != nil && !isNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *GatewayInstance) SetHostname(v string) {
	o.Hostname = &v
}

// GetInitializedAt returns the InitializedAt field value if set, zero value otherwise.
func (o *GatewayInstance) GetInitializedAt() string {
	if o == nil || isNil(o.InitializedAt) {
		var ret string
		return ret
	}
	return *o.InitializedAt
}

// GetInitializedAtOk returns a tuple with the InitializedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayInstance) GetInitializedAtOk() (*string, bool) {
	if o == nil || isNil(o.InitializedAt) {
    return nil, false
	}
	return o.InitializedAt, true
}

// HasInitializedAt returns a boolean if a field has been set.
func (o *GatewayInstance) HasInitializedAt() bool {
	if o != nil && !isNil(o.InitializedAt) {
		return true
	}

	return false
}

// SetInitializedAt gets a reference to the given string and assigns it to the InitializedAt field.
func (o *GatewayInstance) SetInitializedAt(v string) {
	o.InitializedAt = &v
}

// GetLastReportedAt returns the LastReportedAt field value if set, zero value otherwise.
func (o *GatewayInstance) GetLastReportedAt() string {
	if o == nil || isNil(o.LastReportedAt) {
		var ret string
		return ret
	}
	return *o.LastReportedAt
}

// GetLastReportedAtOk returns a tuple with the LastReportedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayInstance) GetLastReportedAtOk() (*string, bool) {
	if o == nil || isNil(o.LastReportedAt) {
    return nil, false
	}
	return o.LastReportedAt, true
}

// HasLastReportedAt returns a boolean if a field has been set.
func (o *GatewayInstance) HasLastReportedAt() bool {
	if o != nil && !isNil(o.LastReportedAt) {
		return true
	}

	return false
}

// SetLastReportedAt gets a reference to the given string and assigns it to the LastReportedAt field.
func (o *GatewayInstance) SetLastReportedAt(v string) {
	o.LastReportedAt = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *GatewayInstance) GetVersion() GatewayInstanceVersion {
	if o == nil || isNil(o.Version) {
		var ret GatewayInstanceVersion
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayInstance) GetVersionOk() (*GatewayInstanceVersion, bool) {
	if o == nil || isNil(o.Version) {
    return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *GatewayInstance) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given GatewayInstanceVersion and assigns it to the Version field.
func (o *GatewayInstance) SetVersion(v GatewayInstanceVersion) {
	o.Version = &v
}

// GetBusyPercentage returns the BusyPercentage field value if set, zero value otherwise.
func (o *GatewayInstance) GetBusyPercentage() int32 {
	if o == nil || isNil(o.BusyPercentage) {
		var ret int32
		return ret
	}
	return *o.BusyPercentage
}

// GetBusyPercentageOk returns a tuple with the BusyPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayInstance) GetBusyPercentageOk() (*int32, bool) {
	if o == nil || isNil(o.BusyPercentage) {
    return nil, false
	}
	return o.BusyPercentage, true
}

// HasBusyPercentage returns a boolean if a field has been set.
func (o *GatewayInstance) HasBusyPercentage() bool {
	if o != nil && !isNil(o.BusyPercentage) {
		return true
	}

	return false
}

// SetBusyPercentage gets a reference to the given int32 and assigns it to the BusyPercentage field.
func (o *GatewayInstance) SetBusyPercentage(v int32) {
	o.BusyPercentage = &v
}

// GetOperationsPerSecond returns the OperationsPerSecond field value if set, zero value otherwise.
func (o *GatewayInstance) GetOperationsPerSecond() float32 {
	if o == nil || isNil(o.OperationsPerSecond) {
		var ret float32
		return ret
	}
	return *o.OperationsPerSecond
}

// GetOperationsPerSecondOk returns a tuple with the OperationsPerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayInstance) GetOperationsPerSecondOk() (*float32, bool) {
	if o == nil || isNil(o.OperationsPerSecond) {
    return nil, false
	}
	return o.OperationsPerSecond, true
}

// HasOperationsPerSecond returns a boolean if a field has been set.
func (o *GatewayInstance) HasOperationsPerSecond() bool {
	if o != nil && !isNil(o.OperationsPerSecond) {
		return true
	}

	return false
}

// SetOperationsPerSecond gets a reference to the given float32 and assigns it to the OperationsPerSecond field.
func (o *GatewayInstance) SetOperationsPerSecond(v float32) {
	o.OperationsPerSecond = &v
}

// GetResponseTimeMillis returns the ResponseTimeMillis field value if set, zero value otherwise.
func (o *GatewayInstance) GetResponseTimeMillis() float32 {
	if o == nil || isNil(o.ResponseTimeMillis) {
		var ret float32
		return ret
	}
	return *o.ResponseTimeMillis
}

// GetResponseTimeMillisOk returns a tuple with the ResponseTimeMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayInstance) GetResponseTimeMillisOk() (*float32, bool) {
	if o == nil || isNil(o.ResponseTimeMillis) {
    return nil, false
	}
	return o.ResponseTimeMillis, true
}

// HasResponseTimeMillis returns a boolean if a field has been set.
func (o *GatewayInstance) HasResponseTimeMillis() bool {
	if o != nil && !isNil(o.ResponseTimeMillis) {
		return true
	}

	return false
}

// SetResponseTimeMillis gets a reference to the given float32 and assigns it to the ResponseTimeMillis field.
func (o *GatewayInstance) SetResponseTimeMillis(v float32) {
	o.ResponseTimeMillis = &v
}

func (o GatewayInstance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Connected) {
		toSerialize["connected"] = o.Connected
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !isNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !isNil(o.Credential) {
		toSerialize["credential"] = o.Credential
	}
	if !isNil(o.CurrentErrors) {
		toSerialize["currentErrors"] = o.CurrentErrors
	}
	if !isNil(o.HealthStatus) {
		toSerialize["healthStatus"] = o.HealthStatus
	}
	if !isNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !isNil(o.InitializedAt) {
		toSerialize["initializedAt"] = o.InitializedAt
	}
	if !isNil(o.LastReportedAt) {
		toSerialize["lastReportedAt"] = o.LastReportedAt
	}
	if !isNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !isNil(o.BusyPercentage) {
		toSerialize["busyPercentage"] = o.BusyPercentage
	}
	if !isNil(o.OperationsPerSecond) {
		toSerialize["operationsPerSecond"] = o.OperationsPerSecond
	}
	if !isNil(o.ResponseTimeMillis) {
		toSerialize["responseTimeMillis"] = o.ResponseTimeMillis
	}
	return json.Marshal(toSerialize)
}

type NullableGatewayInstance struct {
	value *GatewayInstance
	isSet bool
}

func (v NullableGatewayInstance) Get() *GatewayInstance {
	return v.value
}

func (v *NullableGatewayInstance) Set(val *GatewayInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayInstance(val *GatewayInstance) *NullableGatewayInstance {
	return &NullableGatewayInstance{value: val, isSet: true}
}

func (v NullableGatewayInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


