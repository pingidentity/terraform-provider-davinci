/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// TemplateContentSMSVoiceAllOf struct for TemplateContentSMSVoiceAllOf
type TemplateContentSMSVoiceAllOf struct {
	// The SMS or voice text. * **SMS**: UC-2 encoding is used for text that contains non GSM-7 characters. UC-2 encoded text cannot exceed 67 characters. GSM-7 encoded text cannot exceed 153 characters. If supported, it can include variables. * **Voice**: Limited to 1Kb characters.   The following substitution place holders can be embedded in the message:   * `<pause1sec>`: Pauses the message narration for 1 second.     The pause interval <pause1sec> cannot be modified. To pause the message narration for more than one second, repeat multiple `<pause1sec>` occurrences in succession, according to the desired pause interval duration. For example, `<pause1sec><pause1sec><pause1sec>` pauses the message narration for three seconds.   * `<sayCharValue> .. </sayCharValue>`: Reads the character name of each character of the enclosed string separately.   * `<repeatMessage val=x> .. </repeatMessage>`: Narrates the enclosed text `<val>` number of times.      In the following message example, `${otp}` is assigned the value `\"123456\"`, and `${email}` is assigned the value `\"joe@bxz.com\"`:   ```   Hello <pause1sec> your authentication code is    <sayCharValue>${otp}</​sayCharValue>    <repeatMessage val=2> I repeat your code is    <sayCharValue>${otp}</​sayCharValue>   </​repeatMessage> <pause1sec>    Mail <sayCharValue>${email}</​sayCharValue> for help   ```   The narrated message on the voice call sounds like:   ```   HELLO <1 second silence> YOUR AUTHENTICATION CODE IS    ONE TWO THREE FOUR FIVE SIX    I REPEAT YOUR CODE IS ONE TWO THREE FOUR FIVE SIX    I REPEAT YOUR CODE IS ONE TWO THREE FOUR FIVE SIX <1 second silence>    MAIL JAY OH EE AT BEE EX ZEE DOT SEE OH EM FOR HELP   ```    Voice OTP supports vendor-specific voices.   * Supported Twilio voices:     * Man, Woman       Supported locales (default: en):       en, en_GB, es, fr, de     * Alice (Twilio only)       Supported locales (default: en US):       da_DK, de_DE, en_AU, en_CA, en_GB, en_US, ca_ES, es_ES, es_MX, fi_FI, fr_CA, fr_FR, it_IT, ja_JP, ko_KR, nb_NO, nl_NL, pl_PL, pt_BR, pt_PT, ru_RU, sv_SE, zh_CN, zh_HK, zh_TW     * Amazon Polly       cy_GB, ro_RO, is_IS, hi_IN tr_TR   * Supported Syniverse voices:     * Man, Woman       Supported locales:       en_US, en_GB, es_ES, es_US, fr_FR, de_DE, it_IT, en_AU, da_DK, is_IS, nl_NL, pl_PL, pt_BR, pt_PT, ru_RU, ja_JP     * Woman only       Supported locales:       cmn_CN, cy_GB, en_IN, fr_CA, hi_IN, nb_NO, ro_RO, sv_SE, tr_TR, ko_KR, ar 
	Content string `json:"content"`
}

// NewTemplateContentSMSVoiceAllOf instantiates a new TemplateContentSMSVoiceAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateContentSMSVoiceAllOf(content string) *TemplateContentSMSVoiceAllOf {
	this := TemplateContentSMSVoiceAllOf{}
	this.Content = content
	return &this
}

// NewTemplateContentSMSVoiceAllOfWithDefaults instantiates a new TemplateContentSMSVoiceAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateContentSMSVoiceAllOfWithDefaults() *TemplateContentSMSVoiceAllOf {
	this := TemplateContentSMSVoiceAllOf{}
	return &this
}

// GetContent returns the Content field value
func (o *TemplateContentSMSVoiceAllOf) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *TemplateContentSMSVoiceAllOf) GetContentOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *TemplateContentSMSVoiceAllOf) SetContent(v string) {
	o.Content = v
}

func (o TemplateContentSMSVoiceAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["content"] = o.Content
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateContentSMSVoiceAllOf struct {
	value *TemplateContentSMSVoiceAllOf
	isSet bool
}

func (v NullableTemplateContentSMSVoiceAllOf) Get() *TemplateContentSMSVoiceAllOf {
	return v.value
}

func (v *NullableTemplateContentSMSVoiceAllOf) Set(val *TemplateContentSMSVoiceAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateContentSMSVoiceAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateContentSMSVoiceAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateContentSMSVoiceAllOf(val *TemplateContentSMSVoiceAllOf) *NullableTemplateContentSMSVoiceAllOf {
	return &NullableTemplateContentSMSVoiceAllOf{value: val, isSet: true}
}

func (v NullableTemplateContentSMSVoiceAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateContentSMSVoiceAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


