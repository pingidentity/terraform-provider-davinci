/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// EmailDomainOwnershipStatusRegionsInner struct for EmailDomainOwnershipStatusRegionsInner
type EmailDomainOwnershipStatusRegionsInner struct {
	// The name of the region.
	Name *string `json:"name,omitempty"`
	Status *EnumEmailDomainStatus `json:"status,omitempty"`
	// Record name.
	Key *string `json:"key,omitempty"`
	// Record value.
	Value *string `json:"value,omitempty"`
}

// NewEmailDomainOwnershipStatusRegionsInner instantiates a new EmailDomainOwnershipStatusRegionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailDomainOwnershipStatusRegionsInner() *EmailDomainOwnershipStatusRegionsInner {
	this := EmailDomainOwnershipStatusRegionsInner{}
	return &this
}

// NewEmailDomainOwnershipStatusRegionsInnerWithDefaults instantiates a new EmailDomainOwnershipStatusRegionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailDomainOwnershipStatusRegionsInnerWithDefaults() *EmailDomainOwnershipStatusRegionsInner {
	this := EmailDomainOwnershipStatusRegionsInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EmailDomainOwnershipStatusRegionsInner) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailDomainOwnershipStatusRegionsInner) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EmailDomainOwnershipStatusRegionsInner) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EmailDomainOwnershipStatusRegionsInner) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *EmailDomainOwnershipStatusRegionsInner) GetStatus() EnumEmailDomainStatus {
	if o == nil || isNil(o.Status) {
		var ret EnumEmailDomainStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailDomainOwnershipStatusRegionsInner) GetStatusOk() (*EnumEmailDomainStatus, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EmailDomainOwnershipStatusRegionsInner) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given EnumEmailDomainStatus and assigns it to the Status field.
func (o *EmailDomainOwnershipStatusRegionsInner) SetStatus(v EnumEmailDomainStatus) {
	o.Status = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *EmailDomainOwnershipStatusRegionsInner) GetKey() string {
	if o == nil || isNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailDomainOwnershipStatusRegionsInner) GetKeyOk() (*string, bool) {
	if o == nil || isNil(o.Key) {
    return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *EmailDomainOwnershipStatusRegionsInner) HasKey() bool {
	if o != nil && !isNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *EmailDomainOwnershipStatusRegionsInner) SetKey(v string) {
	o.Key = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *EmailDomainOwnershipStatusRegionsInner) GetValue() string {
	if o == nil || isNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailDomainOwnershipStatusRegionsInner) GetValueOk() (*string, bool) {
	if o == nil || isNil(o.Value) {
    return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *EmailDomainOwnershipStatusRegionsInner) HasValue() bool {
	if o != nil && !isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *EmailDomainOwnershipStatusRegionsInner) SetValue(v string) {
	o.Value = &v
}

func (o EmailDomainOwnershipStatusRegionsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !isNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableEmailDomainOwnershipStatusRegionsInner struct {
	value *EmailDomainOwnershipStatusRegionsInner
	isSet bool
}

func (v NullableEmailDomainOwnershipStatusRegionsInner) Get() *EmailDomainOwnershipStatusRegionsInner {
	return v.value
}

func (v *NullableEmailDomainOwnershipStatusRegionsInner) Set(val *EmailDomainOwnershipStatusRegionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailDomainOwnershipStatusRegionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailDomainOwnershipStatusRegionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailDomainOwnershipStatusRegionsInner(val *EmailDomainOwnershipStatusRegionsInner) *NullableEmailDomainOwnershipStatusRegionsInner {
	return &NullableEmailDomainOwnershipStatusRegionsInner{value: val, isSet: true}
}

func (v NullableEmailDomainOwnershipStatusRegionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailDomainOwnershipStatusRegionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


