/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// EmailDomainDKIMStatusRegionsInner struct for EmailDomainDKIMStatusRegionsInner
type EmailDomainDKIMStatusRegionsInner struct {
	// The name of the region.
	Name *string `json:"name,omitempty"`
	Status *EnumEmailDomainStatus `json:"status,omitempty"`
	// A collection of key and value pairs.
	Tokens []EmailDomainDKIMStatusRegionsInnerTokensInner `json:"tokens,omitempty"`
}

// NewEmailDomainDKIMStatusRegionsInner instantiates a new EmailDomainDKIMStatusRegionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailDomainDKIMStatusRegionsInner() *EmailDomainDKIMStatusRegionsInner {
	this := EmailDomainDKIMStatusRegionsInner{}
	return &this
}

// NewEmailDomainDKIMStatusRegionsInnerWithDefaults instantiates a new EmailDomainDKIMStatusRegionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailDomainDKIMStatusRegionsInnerWithDefaults() *EmailDomainDKIMStatusRegionsInner {
	this := EmailDomainDKIMStatusRegionsInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EmailDomainDKIMStatusRegionsInner) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailDomainDKIMStatusRegionsInner) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EmailDomainDKIMStatusRegionsInner) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EmailDomainDKIMStatusRegionsInner) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *EmailDomainDKIMStatusRegionsInner) GetStatus() EnumEmailDomainStatus {
	if o == nil || isNil(o.Status) {
		var ret EnumEmailDomainStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailDomainDKIMStatusRegionsInner) GetStatusOk() (*EnumEmailDomainStatus, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EmailDomainDKIMStatusRegionsInner) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given EnumEmailDomainStatus and assigns it to the Status field.
func (o *EmailDomainDKIMStatusRegionsInner) SetStatus(v EnumEmailDomainStatus) {
	o.Status = &v
}

// GetTokens returns the Tokens field value if set, zero value otherwise.
func (o *EmailDomainDKIMStatusRegionsInner) GetTokens() []EmailDomainDKIMStatusRegionsInnerTokensInner {
	if o == nil || isNil(o.Tokens) {
		var ret []EmailDomainDKIMStatusRegionsInnerTokensInner
		return ret
	}
	return o.Tokens
}

// GetTokensOk returns a tuple with the Tokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailDomainDKIMStatusRegionsInner) GetTokensOk() ([]EmailDomainDKIMStatusRegionsInnerTokensInner, bool) {
	if o == nil || isNil(o.Tokens) {
    return nil, false
	}
	return o.Tokens, true
}

// HasTokens returns a boolean if a field has been set.
func (o *EmailDomainDKIMStatusRegionsInner) HasTokens() bool {
	if o != nil && !isNil(o.Tokens) {
		return true
	}

	return false
}

// SetTokens gets a reference to the given []EmailDomainDKIMStatusRegionsInnerTokensInner and assigns it to the Tokens field.
func (o *EmailDomainDKIMStatusRegionsInner) SetTokens(v []EmailDomainDKIMStatusRegionsInnerTokensInner) {
	o.Tokens = v
}

func (o EmailDomainDKIMStatusRegionsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Tokens) {
		toSerialize["tokens"] = o.Tokens
	}
	return json.Marshal(toSerialize)
}

type NullableEmailDomainDKIMStatusRegionsInner struct {
	value *EmailDomainDKIMStatusRegionsInner
	isSet bool
}

func (v NullableEmailDomainDKIMStatusRegionsInner) Get() *EmailDomainDKIMStatusRegionsInner {
	return v.value
}

func (v *NullableEmailDomainDKIMStatusRegionsInner) Set(val *EmailDomainDKIMStatusRegionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailDomainDKIMStatusRegionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailDomainDKIMStatusRegionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailDomainDKIMStatusRegionsInner(val *EmailDomainDKIMStatusRegionsInner) *NullableEmailDomainDKIMStatusRegionsInner {
	return &NullableEmailDomainDKIMStatusRegionsInner{value: val, isSet: true}
}

func (v NullableEmailDomainDKIMStatusRegionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailDomainDKIMStatusRegionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


