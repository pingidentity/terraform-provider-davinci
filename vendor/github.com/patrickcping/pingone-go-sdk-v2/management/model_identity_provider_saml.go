/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// IdentityProviderSAML struct for IdentityProviderSAML
type IdentityProviderSAML struct {
	Links map[string]interface{} `json:"_links,omitempty"`
	// The description of the IdP.
	Description *string `json:"description,omitempty"`
	// The current enabled state of the IdP.
	Enabled bool `json:"enabled"`
	Environment *ObjectEnvironment `json:"environment,omitempty"`
	Icon *IdentityProviderCommonIcon `json:"icon,omitempty"`
	// The resource ID.
	Id *string `json:"id,omitempty"`
	LoginButtonIcon *IdentityProviderCommonLoginButtonIcon `json:"loginButtonIcon,omitempty"`
	// The name of the IdP.
	Name string `json:"name"`
	Registration *IdentityProviderCommonRegistration `json:"registration,omitempty"`
	Type EnumIdentityProviderExt `json:"type"`
	// The time the resource was created.
	CreatedAt *string `json:"createdAt,omitempty"`
	// The time the resource was last updated.
	UpdatedAt *string `json:"updatedAt,omitempty"`
	// A boolean that specifies whether the SAML authentication request will be signed when sending to the identity provider. Set this to true if the external IDP is included in an authentication policy to be used by applications that are accessed using a mix of default URLS and custom Domains URLs.
	AuthnRequestSigned *bool `json:"authnRequestSigned,omitempty"`
	// A string that specifies the entity ID URI that is checked against the issuerId tag in the incoming response.
	IdpEntityId string `json:"idpEntityId"`
	IdpVerification IdentityProviderSAMLAllOfIdpVerification `json:"idpVerification"`
	// A string that specifies the service provider's entity ID, used to look up the application.
	SpEntityId string `json:"spEntityId"`
	SpSigning *IdentityProviderSAMLAllOfSpSigning `json:"spSigning,omitempty"`
	SsoBinding EnumIdentityProviderSAMLSSOBinding `json:"ssoBinding"`
	// A string that specifies the SSO endpoint for the authentication request.
	SsoEndpoint string `json:"ssoEndpoint"`
}

// NewIdentityProviderSAML instantiates a new IdentityProviderSAML object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityProviderSAML(enabled bool, name string, type_ EnumIdentityProviderExt, idpEntityId string, idpVerification IdentityProviderSAMLAllOfIdpVerification, spEntityId string, ssoBinding EnumIdentityProviderSAMLSSOBinding, ssoEndpoint string) *IdentityProviderSAML {
	this := IdentityProviderSAML{}
	this.Enabled = enabled
	this.Name = name
	this.Type = type_
	this.IdpEntityId = idpEntityId
	this.IdpVerification = idpVerification
	this.SpEntityId = spEntityId
	this.SsoBinding = ssoBinding
	this.SsoEndpoint = ssoEndpoint
	return &this
}

// NewIdentityProviderSAMLWithDefaults instantiates a new IdentityProviderSAML object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityProviderSAMLWithDefaults() *IdentityProviderSAML {
	this := IdentityProviderSAML{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetLinks() map[string]interface{} {
	if o == nil || isNil(o.Links) {
		var ret map[string]interface{}
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetLinksOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Links) {
    return map[string]interface{}{}, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasLinks() bool {
	if o != nil && !isNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]interface{} and assigns it to the Links field.
func (o *IdentityProviderSAML) SetLinks(v map[string]interface{}) {
	o.Links = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *IdentityProviderSAML) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *IdentityProviderSAML) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *IdentityProviderSAML) SetEnabled(v bool) {
	o.Enabled = v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetEnvironment() ObjectEnvironment {
	if o == nil || isNil(o.Environment) {
		var ret ObjectEnvironment
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetEnvironmentOk() (*ObjectEnvironment, bool) {
	if o == nil || isNil(o.Environment) {
    return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasEnvironment() bool {
	if o != nil && !isNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given ObjectEnvironment and assigns it to the Environment field.
func (o *IdentityProviderSAML) SetEnvironment(v ObjectEnvironment) {
	o.Environment = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetIcon() IdentityProviderCommonIcon {
	if o == nil || isNil(o.Icon) {
		var ret IdentityProviderCommonIcon
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetIconOk() (*IdentityProviderCommonIcon, bool) {
	if o == nil || isNil(o.Icon) {
    return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasIcon() bool {
	if o != nil && !isNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given IdentityProviderCommonIcon and assigns it to the Icon field.
func (o *IdentityProviderSAML) SetIcon(v IdentityProviderCommonIcon) {
	o.Icon = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IdentityProviderSAML) SetId(v string) {
	o.Id = &v
}

// GetLoginButtonIcon returns the LoginButtonIcon field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetLoginButtonIcon() IdentityProviderCommonLoginButtonIcon {
	if o == nil || isNil(o.LoginButtonIcon) {
		var ret IdentityProviderCommonLoginButtonIcon
		return ret
	}
	return *o.LoginButtonIcon
}

// GetLoginButtonIconOk returns a tuple with the LoginButtonIcon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetLoginButtonIconOk() (*IdentityProviderCommonLoginButtonIcon, bool) {
	if o == nil || isNil(o.LoginButtonIcon) {
    return nil, false
	}
	return o.LoginButtonIcon, true
}

// HasLoginButtonIcon returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasLoginButtonIcon() bool {
	if o != nil && !isNil(o.LoginButtonIcon) {
		return true
	}

	return false
}

// SetLoginButtonIcon gets a reference to the given IdentityProviderCommonLoginButtonIcon and assigns it to the LoginButtonIcon field.
func (o *IdentityProviderSAML) SetLoginButtonIcon(v IdentityProviderCommonLoginButtonIcon) {
	o.LoginButtonIcon = &v
}

// GetName returns the Name field value
func (o *IdentityProviderSAML) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IdentityProviderSAML) SetName(v string) {
	o.Name = v
}

// GetRegistration returns the Registration field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetRegistration() IdentityProviderCommonRegistration {
	if o == nil || isNil(o.Registration) {
		var ret IdentityProviderCommonRegistration
		return ret
	}
	return *o.Registration
}

// GetRegistrationOk returns a tuple with the Registration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetRegistrationOk() (*IdentityProviderCommonRegistration, bool) {
	if o == nil || isNil(o.Registration) {
    return nil, false
	}
	return o.Registration, true
}

// HasRegistration returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasRegistration() bool {
	if o != nil && !isNil(o.Registration) {
		return true
	}

	return false
}

// SetRegistration gets a reference to the given IdentityProviderCommonRegistration and assigns it to the Registration field.
func (o *IdentityProviderSAML) SetRegistration(v IdentityProviderCommonRegistration) {
	o.Registration = &v
}

// GetType returns the Type field value
func (o *IdentityProviderSAML) GetType() EnumIdentityProviderExt {
	if o == nil {
		var ret EnumIdentityProviderExt
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetTypeOk() (*EnumIdentityProviderExt, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *IdentityProviderSAML) SetType(v EnumIdentityProviderExt) {
	o.Type = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetCreatedAt() string {
	if o == nil || isNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetCreatedAtOk() (*string, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *IdentityProviderSAML) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetUpdatedAt() string {
	if o == nil || isNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetUpdatedAtOk() (*string, bool) {
	if o == nil || isNil(o.UpdatedAt) {
    return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *IdentityProviderSAML) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetAuthnRequestSigned returns the AuthnRequestSigned field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetAuthnRequestSigned() bool {
	if o == nil || isNil(o.AuthnRequestSigned) {
		var ret bool
		return ret
	}
	return *o.AuthnRequestSigned
}

// GetAuthnRequestSignedOk returns a tuple with the AuthnRequestSigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetAuthnRequestSignedOk() (*bool, bool) {
	if o == nil || isNil(o.AuthnRequestSigned) {
    return nil, false
	}
	return o.AuthnRequestSigned, true
}

// HasAuthnRequestSigned returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasAuthnRequestSigned() bool {
	if o != nil && !isNil(o.AuthnRequestSigned) {
		return true
	}

	return false
}

// SetAuthnRequestSigned gets a reference to the given bool and assigns it to the AuthnRequestSigned field.
func (o *IdentityProviderSAML) SetAuthnRequestSigned(v bool) {
	o.AuthnRequestSigned = &v
}

// GetIdpEntityId returns the IdpEntityId field value
func (o *IdentityProviderSAML) GetIdpEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdpEntityId
}

// GetIdpEntityIdOk returns a tuple with the IdpEntityId field value
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetIdpEntityIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IdpEntityId, true
}

// SetIdpEntityId sets field value
func (o *IdentityProviderSAML) SetIdpEntityId(v string) {
	o.IdpEntityId = v
}

// GetIdpVerification returns the IdpVerification field value
func (o *IdentityProviderSAML) GetIdpVerification() IdentityProviderSAMLAllOfIdpVerification {
	if o == nil {
		var ret IdentityProviderSAMLAllOfIdpVerification
		return ret
	}

	return o.IdpVerification
}

// GetIdpVerificationOk returns a tuple with the IdpVerification field value
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetIdpVerificationOk() (*IdentityProviderSAMLAllOfIdpVerification, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IdpVerification, true
}

// SetIdpVerification sets field value
func (o *IdentityProviderSAML) SetIdpVerification(v IdentityProviderSAMLAllOfIdpVerification) {
	o.IdpVerification = v
}

// GetSpEntityId returns the SpEntityId field value
func (o *IdentityProviderSAML) GetSpEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SpEntityId
}

// GetSpEntityIdOk returns a tuple with the SpEntityId field value
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetSpEntityIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.SpEntityId, true
}

// SetSpEntityId sets field value
func (o *IdentityProviderSAML) SetSpEntityId(v string) {
	o.SpEntityId = v
}

// GetSpSigning returns the SpSigning field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetSpSigning() IdentityProviderSAMLAllOfSpSigning {
	if o == nil || isNil(o.SpSigning) {
		var ret IdentityProviderSAMLAllOfSpSigning
		return ret
	}
	return *o.SpSigning
}

// GetSpSigningOk returns a tuple with the SpSigning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetSpSigningOk() (*IdentityProviderSAMLAllOfSpSigning, bool) {
	if o == nil || isNil(o.SpSigning) {
    return nil, false
	}
	return o.SpSigning, true
}

// HasSpSigning returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasSpSigning() bool {
	if o != nil && !isNil(o.SpSigning) {
		return true
	}

	return false
}

// SetSpSigning gets a reference to the given IdentityProviderSAMLAllOfSpSigning and assigns it to the SpSigning field.
func (o *IdentityProviderSAML) SetSpSigning(v IdentityProviderSAMLAllOfSpSigning) {
	o.SpSigning = &v
}

// GetSsoBinding returns the SsoBinding field value
func (o *IdentityProviderSAML) GetSsoBinding() EnumIdentityProviderSAMLSSOBinding {
	if o == nil {
		var ret EnumIdentityProviderSAMLSSOBinding
		return ret
	}

	return o.SsoBinding
}

// GetSsoBindingOk returns a tuple with the SsoBinding field value
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetSsoBindingOk() (*EnumIdentityProviderSAMLSSOBinding, bool) {
	if o == nil {
    return nil, false
	}
	return &o.SsoBinding, true
}

// SetSsoBinding sets field value
func (o *IdentityProviderSAML) SetSsoBinding(v EnumIdentityProviderSAMLSSOBinding) {
	o.SsoBinding = v
}

// GetSsoEndpoint returns the SsoEndpoint field value
func (o *IdentityProviderSAML) GetSsoEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SsoEndpoint
}

// GetSsoEndpointOk returns a tuple with the SsoEndpoint field value
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetSsoEndpointOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.SsoEndpoint, true
}

// SetSsoEndpoint sets field value
func (o *IdentityProviderSAML) SetSsoEndpoint(v string) {
	o.SsoEndpoint = v
}

func (o IdentityProviderSAML) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !isNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.LoginButtonIcon) {
		toSerialize["loginButtonIcon"] = o.LoginButtonIcon
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Registration) {
		toSerialize["registration"] = o.Registration
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !isNil(o.AuthnRequestSigned) {
		toSerialize["authnRequestSigned"] = o.AuthnRequestSigned
	}
	if true {
		toSerialize["idpEntityId"] = o.IdpEntityId
	}
	if true {
		toSerialize["idpVerification"] = o.IdpVerification
	}
	if true {
		toSerialize["spEntityId"] = o.SpEntityId
	}
	if !isNil(o.SpSigning) {
		toSerialize["spSigning"] = o.SpSigning
	}
	if true {
		toSerialize["ssoBinding"] = o.SsoBinding
	}
	if true {
		toSerialize["ssoEndpoint"] = o.SsoEndpoint
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityProviderSAML struct {
	value *IdentityProviderSAML
	isSet bool
}

func (v NullableIdentityProviderSAML) Get() *IdentityProviderSAML {
	return v.value
}

func (v *NullableIdentityProviderSAML) Set(val *IdentityProviderSAML) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityProviderSAML) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityProviderSAML) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityProviderSAML(val *IdentityProviderSAML) *NullableIdentityProviderSAML {
	return &NullableIdentityProviderSAML{value: val, isSet: true}
}

func (v NullableIdentityProviderSAML) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityProviderSAML) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


