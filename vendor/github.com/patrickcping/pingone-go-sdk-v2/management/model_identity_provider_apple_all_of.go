/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// IdentityProviderAppleAllOf struct for IdentityProviderAppleAllOf
type IdentityProviderAppleAllOf struct {
	// A string that specifies the application ID from Apple. This is the identifier obtained after registering a services ID in the Apple developer portal. This is a required property.
	ClientId string `json:"clientId"`
	// A string that specifies the private key that is used to generate a client secret. This is a required property.
	ClientSecretSigningKey string `json:"clientSecretSigningKey"`
	// A 10-character string that Apple uses to identify an authentication key. This is a required property.
	KeyId string `json:"keyId"`
	// A 10-character string that Apple uses to identify teams. This is a required property.
	TeamId string `json:"teamId"`
}

// NewIdentityProviderAppleAllOf instantiates a new IdentityProviderAppleAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityProviderAppleAllOf(clientId string, clientSecretSigningKey string, keyId string, teamId string) *IdentityProviderAppleAllOf {
	this := IdentityProviderAppleAllOf{}
	this.ClientId = clientId
	this.ClientSecretSigningKey = clientSecretSigningKey
	this.KeyId = keyId
	this.TeamId = teamId
	return &this
}

// NewIdentityProviderAppleAllOfWithDefaults instantiates a new IdentityProviderAppleAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityProviderAppleAllOfWithDefaults() *IdentityProviderAppleAllOf {
	this := IdentityProviderAppleAllOf{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *IdentityProviderAppleAllOf) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *IdentityProviderAppleAllOf) GetClientIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *IdentityProviderAppleAllOf) SetClientId(v string) {
	o.ClientId = v
}

// GetClientSecretSigningKey returns the ClientSecretSigningKey field value
func (o *IdentityProviderAppleAllOf) GetClientSecretSigningKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecretSigningKey
}

// GetClientSecretSigningKeyOk returns a tuple with the ClientSecretSigningKey field value
// and a boolean to check if the value has been set.
func (o *IdentityProviderAppleAllOf) GetClientSecretSigningKeyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ClientSecretSigningKey, true
}

// SetClientSecretSigningKey sets field value
func (o *IdentityProviderAppleAllOf) SetClientSecretSigningKey(v string) {
	o.ClientSecretSigningKey = v
}

// GetKeyId returns the KeyId field value
func (o *IdentityProviderAppleAllOf) GetKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value
// and a boolean to check if the value has been set.
func (o *IdentityProviderAppleAllOf) GetKeyIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.KeyId, true
}

// SetKeyId sets field value
func (o *IdentityProviderAppleAllOf) SetKeyId(v string) {
	o.KeyId = v
}

// GetTeamId returns the TeamId field value
func (o *IdentityProviderAppleAllOf) GetTeamId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value
// and a boolean to check if the value has been set.
func (o *IdentityProviderAppleAllOf) GetTeamIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TeamId, true
}

// SetTeamId sets field value
func (o *IdentityProviderAppleAllOf) SetTeamId(v string) {
	o.TeamId = v
}

func (o IdentityProviderAppleAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["clientId"] = o.ClientId
	}
	if true {
		toSerialize["clientSecretSigningKey"] = o.ClientSecretSigningKey
	}
	if true {
		toSerialize["keyId"] = o.KeyId
	}
	if true {
		toSerialize["teamId"] = o.TeamId
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityProviderAppleAllOf struct {
	value *IdentityProviderAppleAllOf
	isSet bool
}

func (v NullableIdentityProviderAppleAllOf) Get() *IdentityProviderAppleAllOf {
	return v.value
}

func (v *NullableIdentityProviderAppleAllOf) Set(val *IdentityProviderAppleAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityProviderAppleAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityProviderAppleAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityProviderAppleAllOf(val *IdentityProviderAppleAllOf) *NullableIdentityProviderAppleAllOf {
	return &NullableIdentityProviderAppleAllOf{value: val, isSet: true}
}

func (v NullableIdentityProviderAppleAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityProviderAppleAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


