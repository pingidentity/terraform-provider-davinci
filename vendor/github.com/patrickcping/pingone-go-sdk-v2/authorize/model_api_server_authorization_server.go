/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2022-09-23
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// APIServerAuthorizationServer A container object for properties related to the authorization server that will issue access tokens used to access the APIs.
type APIServerAuthorizationServer struct {
	Resource APIServerAuthorizationServerResource `json:"resource"`
}

// NewAPIServerAuthorizationServer instantiates a new APIServerAuthorizationServer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIServerAuthorizationServer(resource APIServerAuthorizationServerResource) *APIServerAuthorizationServer {
	this := APIServerAuthorizationServer{}
	this.Resource = resource
	return &this
}

// NewAPIServerAuthorizationServerWithDefaults instantiates a new APIServerAuthorizationServer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIServerAuthorizationServerWithDefaults() *APIServerAuthorizationServer {
	this := APIServerAuthorizationServer{}
	return &this
}

// GetResource returns the Resource field value
func (o *APIServerAuthorizationServer) GetResource() APIServerAuthorizationServerResource {
	if o == nil {
		var ret APIServerAuthorizationServerResource
		return ret
	}

	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
func (o *APIServerAuthorizationServer) GetResourceOk() (*APIServerAuthorizationServerResource, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Resource, true
}

// SetResource sets field value
func (o *APIServerAuthorizationServer) SetResource(v APIServerAuthorizationServerResource) {
	o.Resource = v
}

func (o APIServerAuthorizationServer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["resource"] = o.Resource
	}
	return json.Marshal(toSerialize)
}

type NullableAPIServerAuthorizationServer struct {
	value *APIServerAuthorizationServer
	isSet bool
}

func (v NullableAPIServerAuthorizationServer) Get() *APIServerAuthorizationServer {
	return v.value
}

func (v *NullableAPIServerAuthorizationServer) Set(val *APIServerAuthorizationServer) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIServerAuthorizationServer) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIServerAuthorizationServer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIServerAuthorizationServer(val *APIServerAuthorizationServer) *NullableAPIServerAuthorizationServer {
	return &NullableAPIServerAuthorizationServer{value: val, isSet: true}
}

func (v NullableAPIServerAuthorizationServer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIServerAuthorizationServer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


