/*
PingOne Platform API - Authorize

The PingOne Platform API covering the PingOne Authorize service

API version: 2022-09-23
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorize

import (
	"encoding/json"
)

// EntityArrayEmbedded struct for EntityArrayEmbedded
type EntityArrayEmbedded struct {
	DecisionEndpoints []DecisionEndpoint `json:"decisionEndpoints,omitempty"`
	ApiServers []APIServer `json:"apiServers,omitempty"`
}

// NewEntityArrayEmbedded instantiates a new EntityArrayEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityArrayEmbedded() *EntityArrayEmbedded {
	this := EntityArrayEmbedded{}
	return &this
}

// NewEntityArrayEmbeddedWithDefaults instantiates a new EntityArrayEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityArrayEmbeddedWithDefaults() *EntityArrayEmbedded {
	this := EntityArrayEmbedded{}
	return &this
}

// GetDecisionEndpoints returns the DecisionEndpoints field value if set, zero value otherwise.
func (o *EntityArrayEmbedded) GetDecisionEndpoints() []DecisionEndpoint {
	if o == nil || isNil(o.DecisionEndpoints) {
		var ret []DecisionEndpoint
		return ret
	}
	return o.DecisionEndpoints
}

// GetDecisionEndpointsOk returns a tuple with the DecisionEndpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityArrayEmbedded) GetDecisionEndpointsOk() ([]DecisionEndpoint, bool) {
	if o == nil || isNil(o.DecisionEndpoints) {
    return nil, false
	}
	return o.DecisionEndpoints, true
}

// HasDecisionEndpoints returns a boolean if a field has been set.
func (o *EntityArrayEmbedded) HasDecisionEndpoints() bool {
	if o != nil && !isNil(o.DecisionEndpoints) {
		return true
	}

	return false
}

// SetDecisionEndpoints gets a reference to the given []DecisionEndpoint and assigns it to the DecisionEndpoints field.
func (o *EntityArrayEmbedded) SetDecisionEndpoints(v []DecisionEndpoint) {
	o.DecisionEndpoints = v
}

// GetApiServers returns the ApiServers field value if set, zero value otherwise.
func (o *EntityArrayEmbedded) GetApiServers() []APIServer {
	if o == nil || isNil(o.ApiServers) {
		var ret []APIServer
		return ret
	}
	return o.ApiServers
}

// GetApiServersOk returns a tuple with the ApiServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityArrayEmbedded) GetApiServersOk() ([]APIServer, bool) {
	if o == nil || isNil(o.ApiServers) {
    return nil, false
	}
	return o.ApiServers, true
}

// HasApiServers returns a boolean if a field has been set.
func (o *EntityArrayEmbedded) HasApiServers() bool {
	if o != nil && !isNil(o.ApiServers) {
		return true
	}

	return false
}

// SetApiServers gets a reference to the given []APIServer and assigns it to the ApiServers field.
func (o *EntityArrayEmbedded) SetApiServers(v []APIServer) {
	o.ApiServers = v
}

func (o EntityArrayEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DecisionEndpoints) {
		toSerialize["decisionEndpoints"] = o.DecisionEndpoints
	}
	if !isNil(o.ApiServers) {
		toSerialize["apiServers"] = o.ApiServers
	}
	return json.Marshal(toSerialize)
}

type NullableEntityArrayEmbedded struct {
	value *EntityArrayEmbedded
	isSet bool
}

func (v NullableEntityArrayEmbedded) Get() *EntityArrayEmbedded {
	return v.value
}

func (v *NullableEntityArrayEmbedded) Set(val *EntityArrayEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityArrayEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityArrayEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityArrayEmbedded(val *EntityArrayEmbedded) *NullableEntityArrayEmbedded {
	return &NullableEntityArrayEmbedded{value: val, isSet: true}
}

func (v NullableEntityArrayEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityArrayEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


